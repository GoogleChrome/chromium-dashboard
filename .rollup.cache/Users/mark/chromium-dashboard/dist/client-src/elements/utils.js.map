{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../client-src/elements/utils.js"],"names":[],"mappings":"AAAA,wDAAwD;;AAExD,OAAO,EAAC,eAAe,EAAC,MAAM,eAAe,CAAC;AAC9C,OAAO,EAAC,OAAO,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AAClC,OAAO,EACL,wBAAwB,EACxB,qBAAqB,EACrB,qBAAqB,EACrB,uBAAuB,EACvB,yCAAyC,EACzC,0BAA0B,EAC1B,6BAA6B,GAC9B,MAAM,oBAAoB,CAAC;AAE5B,IAAI,OAAO,CAAC;AAEZ,sEAAsE;AACtE,sEAAsE;AACtE,IAAM,uBAAuB,GAAG,GAAG,CAAC;AAEpC,MAAM,CAAC,IAAM,SAAS,GAAG,CAAC;IACxB,IAAM,KAAK,GACT,MAAM,CAAC,UAAU;QACjB,QAAQ,CAAC,eAAe,CAAC,WAAW;QACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,OAAO,KAAK,IAAI,uBAAuB,CAAC;AAC1C,CAAC,CAAC,EAAE,CAAC;AAEL;;GAEG;AACH,MAAM,UAAU,QAAQ,CAAC,CAAC,EAAE,YAAiB;IAAjB,6BAAA,EAAA,iBAAiB;IAC3C,IAAM,SAAS,GAAG,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;IACnD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAG;IAClC,IAAI,CAAC,OAAO;QAAE,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IACnE,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAE,CAAC;QACzB,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAAC,SAAS,EAAE,QAAQ;IACtD,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,oBAAa,QAAQ,MAAG,CAAC,CAAC,CAAC,MAAM,CAAC;IAClE,OAAO,SAAS,CAAC,UAAU;SACxB,aAAa,CAAC,YAAY,CAAC;SAC3B,gBAAgB,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;AACvC,CAAC;AAED,mEAAmE;AACnE,MAAM,UAAU,KAAK,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU;IAC/C,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,4EAA4E;AAC5E,MAAM,UAAU,gBAAgB,CAAC,OAAO,EAAE,OAAO;IAC/C,KAA2B,UAAc,EAAd,KAAA,OAAO,CAAC,MAAM,EAAd,cAAc,EAAd,IAAc,EAAE,CAAC;QAAvC,IAAM,YAAY,SAAA;QACrB,IAAI,OAAO,CAAC,UAAU,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;YAClD,OAAO,YAAY,CAAC;QACtB,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,0EAA0E;AAC1E,MAAM,UAAU,0BAA0B,CAAC,QAAQ,EAAE,SAAS;IAC5D,iEAAiE;IACjE,2DAA2D;IAC3D,4CAA4C;IAC5C,IAAI,kBAAkB,GAAG,CAAC,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACzC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;YACzC,kBAAkB,EAAE,CAAC;YACrB,8EAA8E;YAC9E,IAAI,kBAAkB,GAAG,CAAC,EAAE,CAAC;gBAC3B,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,iFAAiF;AACjF,MAAM,UAAU,qBAAqB,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE;IACjE,IAAI,WAAW,IAAI,YAAY,CAAC,YAAY,EAAE,CAAC;QAC7C,OAAO,YAAY,CAAC;IACtB,CAAC;IACD,KAAsB,UAAS,EAAT,KAAA,EAAE,CAAC,MAAM,EAAT,cAAS,EAAT,IAAS,EAAE,CAAC;QAA7B,IAAM,OAAO,SAAA;QAChB,IAAI,WAAW,IAAI,OAAO,CAAC,YAAY,EAAE,CAAC;YACxC,OAAO,OAAO,CAAC;QACjB,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,+DAA+D;AAC/D,MAAM,UAAU,aAAa,CAAC,KAAK,EAAE,SAAS;IAC5C,IAAI,CAAC,KAAK;QAAE,OAAO,SAAS,CAAC;IAC7B,IAAI,SAAS,IAAI,wBAAwB,EAAE,CAAC;QAC1C,OAAO,KAAK,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC;IACpD,CAAC;IACD,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC;AAC1B,CAAC;AAED,4FAA4F;AAC5F,6FAA6F;AAC7F,4EAA4E;AAC5E,SAAS,gBAAgB,CAAC,OAAO,EAAE,SAAS;IAC1C,8FAA8F;IAC9F,IAAI,CAAC,OAAO;QAAE,OAAO;IACrB,IAAI,OAAO,CAAC,cAAO,SAAS,CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QACvD,OAAO;IACT,CAAC;IACD,IAAI,YAAY,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAC1D,KAAwB,UAAkB,EAAlB,KAAA,OAAO,CAAC,UAAU,EAAlB,cAAkB,EAAlB,IAAkB,EAAE,CAAC;QAAxC,IAAM,SAAS,SAAA;QAClB,IAAM,cAAc,GAAG,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAI,cAAc,EAAE,CAAC;YACnB,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IACD,iFAAiF;IACjF,OAAO,CAAC,cAAO,SAAS,CAAE,CAAC,GAAG,YAAY,CAAC;AAC7C,CAAC;AAED,6FAA6F;AAC7F,SAAS,0BAA0B,CAAC,OAAO,EAAE,SAAS;IACpD,IAAI,CAAC,OAAO;QAAE,OAAO,SAAS,CAAC;IAC/B,IAAM,cAAc,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACzD,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAErC,IAAM,qBAAqB,GAAG,cAAO,SAAS,CAAE,CAAC;IACjD,iFAAiF;IACjF,IAAI,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtD,OAAO,sBAAe,OAAO,CAAC,qBAAqB,CAAC,CAAE,CAAC;IACzD,CAAC;IACD,oFAAoF;IACpF,+EAA+E;IAC/E,IACE,OAAO,CAAC,qBAAqB,CAAC;QAC9B,OAAO,CAAC,qBAAqB,CAAC,GAAG,cAAc,EAC/C,CAAC;QACD,OAAO,UAAG,OAAO,CAAC,qBAAqB,CAAC,6BAAmB,cAAc,MAAG,CAAC;IAC/E,CAAC;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,KAAK;IAClC,OAAO,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO;IACvD,IAAM,KAAK,GAAG,wBAAwB,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACpE,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,UAAU,wBAAwB,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO;IAClE,IAAI,qBAAqB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;QACzC,IAAM,OAAK,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAChD,IAAI,SAAS,KAAK,gBAAgB,IAAI,OAAK,EAAE,CAAC;YAC5C,OAAO,0BAA0B,CAAC,OAAK,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,SAAS,KAAK,mBAAmB,IAAI,OAAK,EAAE,CAAC;YAC/C,OAAO,OAAK,CAAC,GAAG,CAAC,UAAA,UAAU,IAAI,OAAA,qBAAqB,CAAC,UAAU,CAAC,EAAjC,CAAiC,CAAC,CAAC;QACpE,CAAC;aAAM,IAAI,SAAS,IAAI,uBAAuB,EAAE,CAAC;YAChD,uFAAuF;YACvF,OAAO,0BAA0B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACxD,CAAC;QACD,OAAO,OAAK,CAAC;IACf,CAAC;IAED,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAM,gBAAgB,GAAG;QACvB,KAAK,EAAE,wBAAwB;QAC/B,OAAO,EAAE,SAAS;QAClB,WAAW,EAAE,MAAM;QACnB,SAAS,EAAE,gBAAgB;QAC3B,iBAAiB,EAAE,yBAAyB;QAC5C,YAAY,EAAE,mBAAmB;QACjC,UAAU,EAAE,gBAAgB;QAC5B,OAAO,EAAE,qBAAqB;QAC9B,gBAAgB,EAAE,kCAAkC;QACpD,MAAM,EAAE,wBAAwB;QAChC,QAAQ,EAAE,0BAA0B;QACpC,kBAAkB,EAAE,6BAA6B;QACjD,iBAAiB,EAAE,yBAAyB;QAC5C,yBAAyB,EAAE,yBAAyB;QACpD,yBAAyB,EAAE,yBAAyB;QACpD,qBAAqB,EAAE,qBAAqB;QAC5C,QAAQ,EAAE,uBAAuB;QACjC,aAAa,EAAE,sBAAsB;QACrC,cAAc,EAAE,wBAAwB;QACxC,YAAY,EAAE,2BAA2B;QACzC,iBAAiB,EAAE,0BAA0B;QAC7C,kBAAkB,EAAE,4BAA4B;QAChD,aAAa,EAAE,2BAA2B;QAC1C,kBAAkB,EAAE,0BAA0B;QAC9C,mBAAmB,EAAE,4BAA4B;QACjD,iBAAiB,EAAE,2BAA2B;KAC/C,CAAC;IACF,IAAI,KAAK,CAAC;IACV,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC;QAChC,IAAI,aAAa,GAAG,OAAO,CAAC;QAC5B,KAAmB,UAAsC,EAAtC,KAAA,gBAAgB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAtC,cAAsC,EAAtC,IAAsC,EAAE,CAAC;YAAvD,IAAM,IAAI,SAAA;YACb,IAAI,aAAa,EAAE,CAAC;gBAClB,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;QACD,KAAK,GAAG,aAAa,CAAC;IACxB,CAAC;SAAM,CAAC;QACN,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS,KAAK,+BAA+B,IAAI,KAAK,EAAE,CAAC;QAC3D,OAAO,KAAK,CAAC,GAAG,CACd,UAAA,UAAU,IAAI,OAAA,yCAAyC,CAAC,UAAU,CAAC,EAArD,CAAqD,CACpE,CAAC;IACJ,CAAC;IACD,IAAI,SAAS,KAAK,mBAAmB,IAAI,KAAK,EAAE,CAAC;QAC/C,OAAO,6BAA6B,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,iGAAiG;AACjG,MAAM,UAAU,eAAe,CAAC,KAAK;IACnC,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAC1B,UAAC,QAAQ,EAAE,OAAO,IAAK,uCAAI,QAAQ,SAAK,OAAO,CAAC,MAAM,SAA/B,CAAgC,EACvD,EAAE,CACH,CAAC;AACJ,CAAC;AAED,gEAAgE;AAChE,MAAM,UAAU,iBAAiB,CAAC,WAAW;IAC3C,6EAA6E;IAC7E,mEAAmE;IACnE,kEAAkE;IAClE,IAAM,eAAe,GAAG,UAAA,IAAI;QAC1B,IAAI,IAAI,EAAE,CAAC;YACT,IAAM,IAAE,GAAG,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,IAAE,EAAE,CAAC;gBACP,qCAAqC;gBACrC,sDAAsD;gBACtD,IAAI,IAAE,CAAC,KAAK,EAAE,CAAC;oBACb,yDAAyD;oBACzD,IAAE,CAAC,KAAK,EAAE,CAAC;gBACb,CAAC;qBAAM,CAAC;oBACN,mEAAmE;oBACnE,UAAU,CAAC;wBACT,IAAE,CAAC,KAAK,EAAE,CAAC;oBACb,CAAC,EAAE,GAAG,CAAC,CAAC;gBACV,CAAC;gBAED,iDAAiD;gBACjD,IAAM,gBAAgB,GAAG,uCAA+B,IAAE,CAAC,IAAI,gBAAY,CAAC;gBAC5E,IAAM,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;gBACxE,IAAI,QAAQ,EAAE,CAAC;oBACb,QAAQ,CAAC,cAAc,CAAC;wBACtB,KAAK,EAAE,QAAQ;wBACf,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACN,IAAE,CAAC,cAAc,CAAC;wBAChB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC,CAAC;IAEF,oEAAoE;IACpE,MAAM,CAAC,eAAe,GAAG,UAAA,IAAI;QAC3B,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,gEAAgE;IAChE,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;QAClB,IAAM,IAAI,GAAG,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;AACH,CAAC;AAED,uFAAuF;AACvF,MAAM,UAAU,YAAY,CAAC,SAAS,EAAE,YAAY;IAClD,OAAO,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5C,CAAC;AAED,SAAS,aAAa,CAAC,OAAO;IAC5B,8DAA8D;IAC9D,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IACxB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACpC,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,UAAG,OAAO,MAAG,CAAC,CAAC;IACxC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,OAAO,EAAE,WAAmB;IAAnB,4BAAA,EAAA,mBAAmB;IAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,WAAW,EAAE,CAAC;QAChB,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB;IACvD,CAAC;SAAM,CAAC;QACN,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe;IAC/C,CAAC;AACH,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,OAAO;IACxC,IAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;IACvC,IAAI,CAAC,OAAO;QAAE,OAAO,OAAO,CAAC;IAC7B,OAAO,IAAI,2KAAA,iEACkB,EAAqB,qCAC1C,KADqB,OAAO,CAAC,WAAW,EAAE,EACzC;AACX,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,IAAI;IAChC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzC,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,QAAQ;IACpC,IAAM,MAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC7C,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAoB,UAAa,EAAb,KAAA,MAAM,CAAC,IAAI,EAAE,EAAb,cAAa,EAAb,IAAa,EAAE,CAAC;QAA/B,IAAM,KAAK,SAAA;QACd,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACnB,SAAS;QACX,CAAC;QACD,kCAAkC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,MAAM,EAAE,QAAQ;IAC7C,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9B,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,MAAM,EAAE,CAAC;QACX,KAAqB,UAAsB,EAAtB,KAAA,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAtB,cAAsB,EAAtB,IAAsB,EAAE,CAAC;YAAnC,IAAA,WAAM,EAAL,CAAC,QAAA,EAAE,CAAC,QAAA;YACd,8BAA8B;YAC9B,IAAI,CAAC,CAAC,EAAE,CAAC;gBACP,SAAS;YACX,CAAC;YACD,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,eAAe,CAAC,GAAG,EAAE,GAAG;IACtC,iCAAiC;IACjC,IAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAExC,wBAAwB;IACxB,IAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzD,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC;QACrD,OAAO;IACT,CAAC;IACD,gEAAgE;IAChE,uBAAuB;IACvB,2EAA2E;IAC3E,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;AAClE,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,cAAc,CAAC,GAAG;IAChC,iCAAiC;IACjC,IAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACvD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;IAErB,wBAAwB;IACxB,IAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzD,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC;QACrD,OAAO;IACT,CAAC;IACD,gEAAgE;IAChE,uBAAuB;IACvB,2EAA2E;IAC3E,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;AAClE,CAAC;AAED;;;;;;;;;GASG;AAEH;;;;;;GAMG;AAEH;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAAC,WAAW,EAAE,SAAS;IACzD,IAAI,UAAU,GAAG,KAAK,CAAC;IACvB,IAAM,cAAc,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,CAAC;IACvC,uEAAuE;IACvE,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAA6D,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE,CAAC;QAAhE,IAAA,sBAA8C,EAA7C,MAAI,UAAA,EAAE,OAAO,aAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,aAAa,mBAAA;QACtD,2EAA2E;QAC3E,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,SAAS;QACX,CAAC;QAED,yDAAyD;QACzD,IAAI,cAAc,GAAG,KAAK,CAAC;QAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC;YAClC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC;QAED,qEAAqE;QACrE,mCAAmC;QACnC,4EAA4E;QAC5E,+FAA+F;QAC/F,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YAChC,sFAAsF;YACtF,IAAI,CAAC,cAAc,EAAE,CAAC;gBACpB,SAAS;YACX,CAAC;YACD,sEAAsE;YACtE,cAAc,CAAC,MAAI,CAAC,GAAG,aAAa,CAAC;QACvC,CAAC;aAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,0FAA0F;YAC1F,cAAc,CAAC,MAAI,CAAC,GAAG,cAAc,CAAC;QACxC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC;gBACzB,MAAM,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,EAAE,OAAO,EAAC,CAAC;YAClC,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,CAAC,wBAAwB,CAAC,MAAI,CAAC,IAAI,MAAI,CAAC,GAAG;gBACxD,eAAe,EAAE,MAAI;gBACrB,KAAK,EAAE,cAAc;aACtB,CAAC;QACJ,CAAC;QACD,2EAA2E;QAC3E,UAAU,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,OAAO;QACL,eAAe,EAAE,cAAc;QAC/B,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;QAC7B,WAAW,EAAE,UAAU;KACxB,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,yBAAyB,CAAC,QAAQ;IAChD,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IACrD,GAAG,CAAC,iBAAiB,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,KAAK,EAAE,gBAAgB;IAC/D,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,qCAAqC;IACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC;YACrC,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACD,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,2CAA2C;IAC3C,OAAO,QAAQ,CAAC,gBAAgB,CAAC,IAAI,QAAQ,CAAC;AAChD,CAAC","sourcesContent":["// This file contains helper functions for our elements.\n\nimport {markupAutolinks} from './autolink.js';\nimport {nothing, html} from 'lit';\nimport {\n  STAGE_FIELD_NAME_MAPPING,\n  PLATFORMS_DISPLAYNAME,\n  STAGE_SPECIFIC_FIELDS,\n  OT_MILESTONE_END_FIELDS,\n  ENTERPRISE_FEATURE_CATEGORIES_DISPLAYNAME,\n  ROLLOUT_IMPACT_DISPLAYNAME,\n  ENTERPRISE_IMPACT_DISPLAYNAME,\n} from './form-field-enums';\n\nlet toastEl;\n\n// Determine if the browser looks like the user is on a mobile device.\n// We assume that a small enough window width implies a mobile device.\nconst NARROW_WINDOW_MAX_WIDTH = 700;\n\nexport const IS_MOBILE = (() => {\n  const width =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n  return width <= NARROW_WINDOW_MAX_WIDTH;\n})();\n\n/* Convert user-entered text into safe HTML with clickable links\n * where appropriate.  Returns an array with text and anchor tags.\n */\nexport function autolink(s, featureLinks = []) {\n  const withLinks = markupAutolinks(s, featureLinks);\n  return withLinks;\n}\n\nexport function showToastMessage(msg) {\n  if (!toastEl) toastEl = document.querySelector('chromedash-toast');\n  if (toastEl?.showMessage) {\n    toastEl.showMessage(msg);\n  }\n}\n\n/**\n * Returns the rendered elements of the named slot of component.\n * @param {Element} component\n * @param {string} slotName\n * @return {Element}\n */\nexport function slotAssignedElements(component, slotName) {\n  const slotSelector = slotName ? `slot[name=${slotName}]` : 'slot';\n  return component.shadowRoot\n    .querySelector(slotSelector)\n    .assignedElements({flatten: true});\n}\n\n/* Return val, or one of the bounds if val is out of the bounds. */\nexport function clamp(val, lowerBound, upperBound) {\n  return Math.max(lowerBound, Math.min(upperBound, val));\n}\n\n/* Given a feature entry stage entity, look up the related process stage. */\nexport function findProcessStage(feStage, process) {\n  for (const processStage of process.stages) {\n    if (feStage.stage_type == processStage.stage_type) {\n      return processStage;\n    }\n  }\n  return null;\n}\n\n/* Determine if the display name field should be displayed for a stage. */\nexport function shouldShowDisplayNameField(feStages, stageType) {\n  // The display name field is only available to a feature's stages\n  // that have more than 1 of the same stage type associated.\n  // It is used to differentiate those stages.\n  let matchingStageCount = 0;\n  for (let i = 0; i < feStages.length; i++) {\n    if (feStages[i].stage_type === stageType) {\n      matchingStageCount++;\n      // If we find two of the same stage type, then display the display name field.\n      if (matchingStageCount > 1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/* Given a process stage, find the first feature entry stage of the same type. */\nexport function findFirstFeatureStage(intentStage, currentStage, fe) {\n  if (intentStage == currentStage.intent_stage) {\n    return currentStage;\n  }\n  for (const feStage of fe.stages) {\n    if (intentStage == feStage.intent_stage) {\n      return feStage;\n    }\n  }\n  return null;\n}\n\n/* Get the value of a stage field using a form-specific name */\nexport function getStageValue(stage, fieldName) {\n  if (!stage) return undefined;\n  if (fieldName in STAGE_FIELD_NAME_MAPPING) {\n    return stage[STAGE_FIELD_NAME_MAPPING[fieldName]];\n  }\n  return stage[fieldName];\n}\n\n// Look at all extension milestones and calculate the highest milestone that an origin trial\n// is available. This is used to display the highest milestone available, but to preserve the\n// milestone that the trial was originally available for without extensions.\nfunction calcMaxMilestone(feStage, fieldName) {\n  // If the max milestone has already been calculated, or no trial extensions exist, do nothing.\n  if (!feStage) return;\n  if (feStage[`max_${fieldName}`] || !feStage.extensions) {\n    return;\n  }\n  let maxMilestone = getStageValue(feStage, fieldName) || 0;\n  for (const extension of feStage.extensions) {\n    const extensionValue = getStageValue(extension, fieldName);\n    if (extensionValue) {\n      maxMilestone = Math.max(maxMilestone, extensionValue);\n    }\n  }\n  // Save the findings with the \"max_\" prefix as a prop of the stage for reference.\n  feStage[`max_${fieldName}`] = maxMilestone;\n}\n\n// Get the milestone value that is displayed to the user regarding the origin trial end date.\nfunction getMilestoneExtensionValue(feStage, fieldName) {\n  if (!feStage) return undefined;\n  const milestoneValue = getStageValue(feStage, fieldName);\n  calcMaxMilestone(feStage, fieldName);\n\n  const maxMilestoneFieldName = `max_${fieldName}`;\n  // Display only extension milestone if the original milestone has not been added.\n  if (feStage[maxMilestoneFieldName] && !milestoneValue) {\n    return `Extended to ${feStage[maxMilestoneFieldName]}`;\n  }\n  // If the trial has been extended past the original milestone, display the extension\n  // milestone with additional text reminding of the original milestone end date.\n  if (\n    feStage[maxMilestoneFieldName] &&\n    feStage[maxMilestoneFieldName] > milestoneValue\n  ) {\n    return `${feStage[maxMilestoneFieldName]} (extended from ${milestoneValue})`;\n  }\n  return milestoneValue;\n}\n\n/**\n * Check if a value is defined and not empty.\n *\n * @param {any} value - The value to be checked.\n * @return {boolean} Returns true if the value is defined and not empty, otherwise false.\n */\nexport function isDefinedValue(value) {\n  return !(value === undefined || value === null || value.length == 0);\n}\n\nexport function hasFieldValue(fieldName, feStage, feature) {\n  const value = getFieldValueFromFeature(fieldName, feStage, feature);\n  return isDefinedValue(value);\n}\n\n/**\n * Retrieves the value of a specific field for a given feature.\n * Note: This is independent of any value that might be in a corresponding\n * form field.\n *\n * @param {string} fieldName - The name of the field to retrieve.\n * @param {string} feStage - The stage of the feature.\n * @param {Object} feature - The feature object to retrieve the field value from.\n * @return {*} The value of the specified field for the given feature.\n */\nexport function getFieldValueFromFeature(fieldName, feStage, feature) {\n  if (STAGE_SPECIFIC_FIELDS.has(fieldName)) {\n    const value = getStageValue(feStage, fieldName);\n    if (fieldName === 'rollout_impact' && value) {\n      return ROLLOUT_IMPACT_DISPLAYNAME[value];\n    }\n    if (fieldName === 'rollout_platforms' && value) {\n      return value.map(platformId => PLATFORMS_DISPLAYNAME[platformId]);\n    } else if (fieldName in OT_MILESTONE_END_FIELDS) {\n      // If an origin trial end date is being displayed, handle extension milestones as well.\n      return getMilestoneExtensionValue(feStage, fieldName);\n    }\n    return value;\n  }\n\n  if (!feature) {\n    return null;\n  }\n\n  const fieldNameMapping = {\n    owner: 'browsers.chrome.owners',\n    editors: 'editors',\n    search_tags: 'tags',\n    spec_link: 'standards.spec',\n    standard_maturity: 'standards.maturity.text',\n    sample_links: 'resources.samples',\n    docs_links: 'resources.docs',\n    bug_url: 'browsers.chrome.bug',\n    blink_components: 'browsers.chrome.blink_components',\n    devrel: 'browsers.chrome.devrel',\n    prefixed: 'browsers.chrome.prefixed',\n    impl_status_chrome: 'browsers.chrome.status.text',\n    shipped_milestone: 'browsers.chrome.desktop',\n    shipped_android_milestone: 'browsers.chrome.android',\n    shipped_webview_milestone: 'browsers.chrome.webview',\n    shipped_ios_milestone: 'browsers.chrome.ios',\n    ff_views: 'browsers.ff.view.text',\n    ff_views_link: 'browsers.ff.view.url',\n    ff_views_notes: 'browsers.ff.view.notes',\n    safari_views: 'browsers.safari.view.text',\n    safari_views_link: 'browsers.safari.view.url',\n    safari_views_notes: 'browsers.safari.view.notes',\n    web_dev_views: 'browsers.webdev.view.text',\n    web_dev_views_link: 'browsers.webdev.view.url',\n    web_dev_views_notes: 'browsers.webdev.view.notes',\n    other_views_notes: 'browsers.other.view.notes',\n  };\n  let value;\n  if (fieldNameMapping[fieldName]) {\n    let propertyValue = feature;\n    for (const step of fieldNameMapping[fieldName].split('.')) {\n      if (propertyValue) {\n        propertyValue = propertyValue[step];\n      }\n    }\n    value = propertyValue;\n  } else {\n    value = feature[fieldName];\n  }\n\n  if (fieldName === 'enterprise_feature_categories' && value) {\n    return value.map(\n      categoryId => ENTERPRISE_FEATURE_CATEGORIES_DISPLAYNAME[categoryId]\n    );\n  }\n  if (fieldName === 'enterprise_impact' && value) {\n    return ENTERPRISE_IMPACT_DISPLAYNAME[value];\n  }\n  return value;\n}\n\n/* Given a stage form definition, return a flat array of the fields associated with the stage. */\nexport function flattenSections(stage) {\n  return stage.sections.reduce(\n    (combined, section) => [...combined, ...section.fields],\n    []\n  );\n}\n\n/* Set up scrolling to a hash url (e.g. #id_explainer_links). */\nexport function setupScrollToHash(pageElement) {\n  // Scroll to the element identified by the hash parameter, which must include\n  // the '#' prefix.  E.g. for a form field: '#id_<form-field-name>'.\n  // Note that this function is bound to the pageElement for a page.\n  const scrollToElement = hash => {\n    if (hash) {\n      const el = pageElement.shadowRoot.querySelector(hash);\n      if (el) {\n        // Focus on the element, if possible.\n        // Note: focus() must be called before scrollToView().\n        if (el.input) {\n          // Note: shoelace element.focus() calls el.input.focus();\n          el.focus();\n        } else {\n          // No el.input (yet), so try after delay.  TODO: Avoid the timeout.\n          setTimeout(() => {\n            el.focus();\n          }, 100);\n        }\n\n        // Find the form field container element, if any.\n        const fieldRowSelector = `chromedash-form-field[name=\"${el.name}\"] tr + tr`;\n        const fieldRow = pageElement.shadowRoot.querySelector(fieldRowSelector);\n        if (fieldRow) {\n          fieldRow.scrollIntoView({\n            block: 'center',\n            behavior: 'smooth',\n          });\n        } else {\n          el.scrollIntoView({\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  };\n\n  // Add global function to jump to an element within the pageElement.\n  window.scrollToElement = hash => {\n    scrollToElement(hash);\n  };\n\n  // Check now as well, which is used when first rendering a page.\n  if (location.hash) {\n    const hash = decodeURIComponent(location.hash);\n    scrollToElement(hash);\n  }\n}\n\n/* Returns a html template if the condition is true, otherwise returns an empty html */\nexport function renderHTMLIf(condition, originalHTML) {\n  return condition ? originalHTML : nothing;\n}\n\nfunction _parseDateStr(dateStr) {\n  // Format date to \"YYYY-MM-DDTHH:mm:ss.sssZ\" to represent UTC.\n  dateStr = dateStr || '';\n  dateStr = dateStr.replace(' ', 'T');\n  const dateObj = new Date(`${dateStr}Z`);\n  if (isNaN(dateObj)) {\n    return null;\n  }\n  return dateObj;\n}\n\nexport function renderAbsoluteDate(dateStr, includeTime = false) {\n  if (!dateStr) {\n    return '';\n  }\n  if (includeTime) {\n    return dateStr.split('.')[0]; // Ignore microseconds.\n  } else {\n    return dateStr.split(' ')[0]; // Ignore time.\n  }\n}\n\nexport function renderRelativeDate(dateStr) {\n  const dateObj = _parseDateStr(dateStr);\n  if (!dateObj) return nothing;\n  return html` <span class=\"relative_date\">\n    (<sl-relative-time date=\"${dateObj.toISOString()}\"> </sl-relative-time>)\n  </span>`;\n}\n\n/** Returns the non-time part of date in the YYYY-MM-DD format.\n *\n * @param {Date} date\n * @return {string}\n */\nexport function isoDateString(date) {\n  return date.toISOString().slice(0, 10);\n}\n\n/**\n * Parses URL query strings into a dict.\n * @param {string} rawQuery a raw URL query string, e.g. q=abc&num=1;\n * @return {Object} A key-value pair dictionary for the query string.\n */\nexport function parseRawQuery(rawQuery) {\n  const params = new URLSearchParams(rawQuery);\n  const result = {};\n  for (const param of params.keys()) {\n    const values = params.getAll(param);\n    if (!values.length) {\n      continue;\n    }\n    // Assume there is only one value.\n    result[param] = values[0];\n  }\n  return result;\n}\n\n/**\n * Create a new URL using params and a location.\n * @param {string} params is the new param object.\n * @param {Object} location is an URL location.\n * @return {Object} the new URL.\n */\nexport function getNewLocation(params, location) {\n  const url = new URL(location);\n  url.search = '';\n  if (params) {\n    for (const [k, v] of Object.entries(params)) {\n      // Skip if the value is empty.\n      if (!v) {\n        continue;\n      }\n      url.searchParams.append(k, v);\n    }\n  }\n  return url;\n}\n\n/**\n * Update window.location with new query params.\n * @param {string} key is the key of the query param.\n * @param {string} val is the unencoded value of the query param.\n */\nexport function updateURLParams(key, val) {\n  // Update the query param object.\n  const rawQuery = parseRawQuery(window.location.search);\n  rawQuery[key] = encodeURIComponent(val);\n\n  // Assemble the new URL.\n  const newURL = getNewLocation(rawQuery, window.location);\n  newURL.hash = '';\n  if (newURL.toString() === window.location.toString()) {\n    return;\n  }\n  // Update URL without refreshing the page. {path:} is needed for\n  // an issue in page.js:\n  // https://github.com/visionmedia/page.js/issues/293#issuecomment-456906679\n  window.history.pushState({path: newURL.toString()}, '', newURL);\n}\n\n/**\n * Update window.location with new query params.\n * @param {string} key is the key of the query param to delete.\n */\nexport function clearURLParams(key) {\n  // Update the query param object.\n  const rawQuery = parseRawQuery(window.location.search);\n  delete rawQuery[key];\n\n  // Assemble the new URL.\n  const newURL = getNewLocation(rawQuery, window.location);\n  newURL.hash = '';\n  if (newURL.toString() === window.location.toString()) {\n    return;\n  }\n  // Update URL without refreshing the page. {path:} is needed for\n  // an issue in page.js:\n  // https://github.com/visionmedia/page.js/issues/293#issuecomment-456906679\n  window.history.pushState({path: newURL.toString()}, '', newURL);\n}\n\n/**\n * @typedef {Object} FieldInfo\n * @property {string} name The name of the field.\n * @property {boolean} touched Whether the field was mutated by the user.\n * @property {number} stageId The stage that the field is associated with.\n *   This field is undefined if the change is a feature change.\n * @property {*} value The value written in the form field.\n * @property {*} implicitValue Value that should be changed for some checkbox fields.\n *   e.g. \"set_stage\" is a checkbox, but should change the field to a stage ID if true.\n */\n\n/**\n * @typedef {Object} UpdateSubmitBody\n * @property {Object.<string, *>} feature_changes An object with feature changes.\n *   key=field name, value=new field value.\n * @property {Array.<Object>} stages The list of changes to specific stages.\n * @property {boolean} has_changes Whether any valid changes are present for submission.\n */\n\n/**\n * Prepare feature/stage changes to be submitted.\n * @param {Array.<FieldInfo>} fieldValues List of fields in the form.\n * @param {number} featureId The ID of the feature being updated.\n * @return {UpdateSubmitBody} Formatted body of new PATCH request.\n */\nexport function formatFeatureChanges(fieldValues, featureId) {\n  let hasChanges = false;\n  const featureChanges = {id: featureId};\n  // Multiple stages can be mutated, so this object is a stage of stages.\n  const stages = {};\n  for (const {name, touched, value, stageId, implicitValue} of fieldValues) {\n    // Only submit changes for touched fields or accuracy verification updates.\n    if (!touched) {\n      continue;\n    }\n\n    // Arrays should be submitted as comma-separated strings.\n    let formattedValue = value;\n    if (Array.isArray(formattedValue)) {\n      formattedValue = formattedValue.join(',');\n    }\n\n    // If an explicit value is present, the field value should be truthy.\n    // Otherwise, we ignore the change.\n    // For example, if this is a checkbox to set the active stage, it would need\n    // to be set to true (value), then the active stage would be set to a stage ID (implicitValue).\n    if (implicitValue !== undefined) {\n      // Falsey value with an implicit value should be ignored (like an unchecked checkbox).\n      if (!formattedValue) {\n        continue;\n      }\n      // fields with implicit values are always changes to feature entities.\n      featureChanges[name] = implicitValue;\n    } else if (!stageId) {\n      // If the field doesn't specify a stage ID, that means this change is for a feature field.\n      featureChanges[name] = formattedValue;\n    } else {\n      if (!(stageId in stages)) {\n        stages[stageId] = {id: stageId};\n      }\n      stages[stageId][STAGE_FIELD_NAME_MAPPING[name] || name] = {\n        form_field_name: name,\n        value: formattedValue,\n      };\n    }\n    // If we see a touched field, it means there are changes in the submission.\n    hasChanges = true;\n  }\n\n  return {\n    feature_changes: featureChanges,\n    stages: Object.values(stages),\n    has_changes: hasChanges,\n  };\n}\n\n/**\n * Manage response to change submission.\n * Required to manage beforeUnload handler.\n * @param {string} response The error message to display,\n *     or empty string if save was successful.\n */\nexport function handleSaveChangesResponse(response) {\n  const app = document.querySelector('chromedash-app');\n  app.setUnsavedChanges(response !== '');\n}\n\nexport function extensionMilestoneIsValid(value, currentMilestone) {\n  if (isNaN(value)) {\n    return false;\n  }\n  // Milestone should only have digits.\n  for (let i = 0; i < value.length; i++) {\n    if (value[i] < '0' || value[i] > '9') {\n      return false;\n    }\n  }\n  const intValue = parseInt(value);\n  if (intValue >= 1000) {\n    return false;\n  }\n  // End milestone should not be in the past.\n  return parseInt(currentMilestone) <= intValue;\n}\n"]}