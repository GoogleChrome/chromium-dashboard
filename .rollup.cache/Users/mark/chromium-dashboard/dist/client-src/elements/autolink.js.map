{"version":3,"file":"autolink.js","sourceRoot":"","sources":["../../../client-src/elements/autolink.js"],"names":[],"mappings":"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","sourcesContent":["// This is an implementation of autolinking pulled from Monorail and repurposed\n// for use with text entries in WebStatus. Use this directly via './utils.js'\n// See: https://chromium.googlesource.com/infra/infra/+/refs/heads/main/appengine/monorail/static_src/autolink.js\n\nimport {enhanceAutolink} from './chromedash-link.js';\nconst CRBUG_DEFAULT_PROJECT = 'chromium';\nconst CRBUG_URL = 'https://bugs.chromium.org';\nconst ISSUE_TRACKER_RE =\n  /(\\b(issues?|bugs?)[ \\t]*(:|=|\\b)|\\bfixed[ \\t]*:)([ \\t]*((\\b[-a-z0-9]+)[:\\#])?(\\#?)(\\d+)\\b(,?[ \\t]*(and|or)?)?)+/gi;\nconst PROJECT_LOCALID_RE =\n  /((\\b(issue|bug)[ \\t]*(:|=)?[ \\t]*|\\bfixed[ \\t]*:[ \\t]*)?((\\b[-a-z0-9]+)[:\\#])?(\\#?)(\\d+))/gi;\nconst PROJECT_COMMENT_BUG_RE =\n  /(((\\b(issue|bug)[ \\t]*(:|=)?[ \\t]*)(\\#?)(\\d+)[ \\t*])?((\\b((comment)[ \\t]*(:|=)?[ \\t]*(\\#?))|(\\B((\\#))(c)))(\\d+)))/gi;\nconst PROJECT_LOCALID_RE_PROJECT_GROUP = 6;\nconst PROJECT_LOCALID_RE_ID_GROUP = 8;\nconst SHORT_LINK_RE =\n  /(^|[^-\\/._])\\b(https?:\\/\\/|ftp:\\/\\/|mailto:)?(go|g|shortn|who|teams)\\/([^\\s<]+)/gi;\nconst NUMERIC_SHORT_LINK_RE =\n  /(^|[^-\\/._])\\b(https?:\\/\\/|ftp:\\/\\/)?(b|t|o|omg|cl|cr|fxr|fxrev|fxb|tqr)\\/([0-9]+)/gi;\nconst IMPLIED_LINK_RE =\n  /(?!@)(^|[^-\\/._])\\b[a-z]((-|\\.)?[a-z0-9])+\\.(com|net|org|edu|dev)\\b(\\/[^\\s<]*)?/gi;\nconst IS_LINK_RE = /()\\b(https?:\\/\\/|ftp:\\/\\/|mailto:)([^\\s<]+)/gi;\nconst LINK_TRAILING_CHARS = [\n  [null, ':'],\n  [null, '.'],\n  [null, ','],\n  [null, '>'],\n  ['(', ')'],\n  ['[', ']'],\n  ['{', '}'],\n  [\"'\", \"'\"],\n  ['\"', '\"'],\n];\nconst GOOG_SHORT_LINK_RE =\n  /^(b|t|o|omg|cl|cr|go|g|shortn|who|teams|fxr|fxrev|fxb|tqr)\\/.*/gi;\n\nconst Components = new Map();\nComponents.set('00-commentbug', {\n  refRegs: [PROJECT_COMMENT_BUG_RE],\n  replacer: replaceCommentBugRef,\n});\nComponents.set('02-full-urls', {\n  refRegs: [IS_LINK_RE],\n  replacer: replaceLinkRef,\n});\n// 03-user-emails unused.\nComponents.set('04-tracker-regular', {\n  refRegs: [ISSUE_TRACKER_RE],\n  replacer: replaceTrackerIssueRef,\n});\nComponents.set('05-linkify-shorthand', {\n  refRegs: [SHORT_LINK_RE, NUMERIC_SHORT_LINK_RE, IMPLIED_LINK_RE],\n  replacer: replaceLinkRef,\n});\n// 06-versioncontrol unused.\n\n// Replace plain text references with links functions.\nfunction replaceIssueRef(stringMatch, projectName, localId, commentId) {\n  return createIssueRefRun(projectName, localId, stringMatch, commentId);\n}\n\nfunction replaceTrackerIssueRef(\n  match,\n  currentProjectName = CRBUG_DEFAULT_PROJECT\n) {\n  const issueRefRE = PROJECT_LOCALID_RE;\n  const commentId = '';\n  const textRuns = [];\n  let refMatch;\n  let pos = 0;\n  while ((refMatch = issueRefRE.exec(match[0])) !== null) {\n    if (refMatch.index > pos) {\n      // Create textrun for content between previous and current match.\n      textRuns.push({content: match[0].slice(pos, refMatch.index)});\n    }\n    if (refMatch[PROJECT_LOCALID_RE_PROJECT_GROUP]) {\n      currentProjectName = refMatch[PROJECT_LOCALID_RE_PROJECT_GROUP];\n    }\n    textRuns.push(\n      replaceIssueRef(\n        refMatch[0],\n        currentProjectName,\n        refMatch[PROJECT_LOCALID_RE_ID_GROUP],\n        commentId\n      )\n    );\n    pos = refMatch.index + refMatch[0].length;\n  }\n  if (match[0].slice(pos) !== '') {\n    textRuns.push({content: match[0].slice(pos)});\n  }\n  return textRuns;\n}\n\nfunction replaceCommentBugRef(match) {\n  let textRun;\n  const issueNum = match[7];\n  const commentNum = match[18];\n  if (issueNum && commentNum) {\n    const href = `${CRBUG_URL}/p/${CRBUG_DEFAULT_PROJECT}/issues/detail?id=${issueNum}#c${commentNum}`;\n    textRun = {content: match[0], tag: 'a', href};\n  } else if (commentNum) {\n    const href = `${CRBUG_URL}/p/${CRBUG_DEFAULT_PROJECT}/issues/detail#c${commentNum}`;\n    textRun = {content: match[0], tag: 'a', href};\n  } else {\n    textRun = {content: match[0]};\n  }\n  return [textRun];\n}\n\nfunction replaceLinkRef(match) {\n  const textRuns = [];\n  let content = match[0];\n  let trailing = '';\n  if (match[1]) {\n    textRuns.push({content: match[1]});\n    content = content.slice(match[1].length);\n  }\n  LINK_TRAILING_CHARS.forEach(([begin, end]) => {\n    if (content.endsWith(end)) {\n      if (!begin || !content.slice(0, -end.length).includes(begin)) {\n        trailing = end + trailing;\n        content = content.slice(0, -end.length);\n      }\n    }\n  });\n  let href = content;\n  const lowerHref = href.toLowerCase();\n  if (\n    !lowerHref.startsWith('http') &&\n    !lowerHref.startsWith('ftp') &&\n    !lowerHref.startsWith('mailto')\n  ) {\n    // Prepend google-internal short links with http to\n    // prevent HTTPS error interstitial.\n    // SHORT_LINK_RE should not be used here as it might be\n    // in the middle of another match() process in an outer loop.\n    if (GOOG_SHORT_LINK_RE.test(lowerHref)) {\n      href = 'http://' + href;\n    } else {\n      href = 'https://' + href;\n    }\n    GOOG_SHORT_LINK_RE.lastIndex = 0;\n  }\n  textRuns.push({content: content, tag: 'a', href: href});\n  if (trailing.length) {\n    textRuns.push({content: trailing});\n  }\n  return textRuns;\n}\n\n// Create custom textrun functions.\nfunction createIssueRefRun(projectName, localId, content, commentId) {\n  return {\n    tag: 'a',\n    content: content,\n    href: `${CRBUG_URL}/p/${projectName}/issues/detail?id=${localId}${commentId}`,\n  };\n}\n\nexport function markupAutolinks(plainString, featureLinks = []) {\n  plainString = plainString || '';\n  const chunks = [plainString.trim()];\n  const textRuns = [];\n  chunks.filter(Boolean).forEach(chunk => {\n    textRuns.push(...autolinkChunk(chunk));\n  });\n  const result = textRuns.map(part => {\n    if (part.tag === 'a') {\n      // if the link is a feature link, enhance it to provide more information\n      return enhanceAutolink(part, featureLinks);\n    }\n    return part.content;\n  });\n  return result;\n}\n\nfunction autolinkChunk(chunk) {\n  let textRuns = [{content: chunk}];\n  Components.forEach(({refRegs, replacer}) => {\n    refRegs.forEach(re => {\n      textRuns = applyLinks(textRuns, replacer, re);\n    });\n  });\n  return textRuns;\n}\n\nfunction applyLinks(textRuns, replacer, re) {\n  const resultRuns = [];\n  textRuns.forEach(textRun => {\n    if (textRun.tag) {\n      resultRuns.push(textRun);\n    } else {\n      const content = textRun.content;\n      let pos = 0;\n      let match;\n      while ((match = re.exec(content)) !== null) {\n        if (match.index > pos) {\n          // Create textrun for content between previous and current match.\n          resultRuns.push({content: content.slice(pos, match.index)});\n        }\n        resultRuns.push(...replacer(match));\n        pos = match.index + match[0].length;\n      }\n      if (content.slice(pos) !== '') {\n        resultRuns.push({content: content.slice(pos)});\n      }\n    }\n  });\n  return resultRuns;\n}\n"]}