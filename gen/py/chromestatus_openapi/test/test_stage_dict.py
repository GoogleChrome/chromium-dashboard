# coding: utf-8

"""
    chomestatus API

    The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chromestatus_openapi.models.stage_dict import StageDict

class TestStageDict(unittest.TestCase):
    """StageDict unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StageDict:
        """Test StageDict
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StageDict`
        """
        model = StageDict()
        if include_optional:
            return StageDict(
                id = 56,
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                feature_id = 56,
                stage_type = 56,
                display_name = '',
                intent_stage = 56,
                intent_thread_url = '',
                announcement_url = '',
                origin_trial_id = '',
                experiment_goals = '',
                experiment_risks = '',
                extensions = [
                    chromestatus_openapi.models.stage_dict_extension.StageDictExtension(
                        id = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        feature_id = 56, 
                        stage_type = 56, 
                        display_name = '', 
                        intent_stage = 56, 
                        intent_thread_url = '', 
                        announcement_url = '', 
                        origin_trial_id = '', 
                        experiment_goals = '', 
                        experiment_risks = '', 
                        origin_trial_feedback_url = '', 
                        ot_action_requested = True, 
                        ot_activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ot_approval_buganizer_component = 56, 
                        ot_approval_buganizer_custom_field_id = 56, 
                        ot_approval_criteria_url = '', 
                        ot_approval_group_email = '', 
                        ot_chromium_trial_name = '', 
                        ot_description = '', 
                        ot_display_name = '', 
                        ot_documentation_url = '', 
                        ot_emails = [
                            ''
                            ], 
                        ot_feedback_submission_url = '', 
                        ot_has_third_party_support = True, 
                        ot_is_critical_trial = True, 
                        ot_is_deprecation_trial = True, 
                        ot_owner_email = '', 
                        ot_require_approvals = True, 
                        ot_setup_status = 56, 
                        ot_webfeature_use_counter = '', 
                        ot_request_note = '', 
                        ot_stage_id = 56, 
                        experiment_extension_reason = '', 
                        finch_url = '', 
                        rollout_details = '', 
                        rollout_impact = 56, 
                        rollout_milestone = 56, 
                        rollout_platforms = [
                            ''
                            ], 
                        enterprise_policies = [
                            ''
                            ], 
                        pm_emails = [
                            ''
                            ], 
                        tl_emails = [
                            ''
                            ], 
                        ux_emails = [
                            ''
                            ], 
                        te_emails = [
                            ''
                            ], )
                    ],
                origin_trial_feedback_url = '',
                ot_action_requested = True,
                ot_activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ot_approval_buganizer_component = 56,
                ot_approval_buganizer_custom_field_id = 56,
                ot_approval_criteria_url = '',
                ot_approval_group_email = '',
                ot_chromium_trial_name = '',
                ot_description = '',
                ot_display_name = '',
                ot_documentation_url = '',
                ot_emails = [
                    ''
                    ],
                ot_feedback_submission_url = '',
                ot_has_third_party_support = True,
                ot_is_critical_trial = True,
                ot_is_deprecation_trial = True,
                ot_owner_email = '',
                ot_require_approvals = True,
                ot_setup_status = 56,
                ot_webfeature_use_counter = '',
                ot_request_note = '',
                ot_stage_id = 56,
                experiment_extension_reason = '',
                finch_url = '',
                rollout_details = '',
                rollout_impact = 56,
                rollout_milestone = 56,
                rollout_platforms = [
                    ''
                    ],
                enterprise_policies = [
                    ''
                    ],
                pm_emails = [
                    ''
                    ],
                tl_emails = [
                    ''
                    ],
                ux_emails = [
                    ''
                    ],
                te_emails = [
                    ''
                    ]
            )
        else:
            return StageDict(
                id = 56,
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                feature_id = 56,
                stage_type = 56,
                display_name = '',
                intent_stage = 56,
                ot_action_requested = True,
                ot_emails = [
                    ''
                    ],
                ot_has_third_party_support = True,
                ot_is_critical_trial = True,
                ot_is_deprecation_trial = True,
                ot_require_approvals = True,
        )
        """

    def testStageDict(self):
        """Test StageDict"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
