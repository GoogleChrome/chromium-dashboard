from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class ChannelInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version=None, mstone=None, stable_date=None, earliest_beta=None, latest_beta=None):  # noqa: E501
        """ChannelInfo - a model defined in OpenAPI

        :param version: The version of this ChannelInfo.  # noqa: E501
        :type version: float
        :param mstone: The mstone of this ChannelInfo.  # noqa: E501
        :type mstone: float
        :param stable_date: The stable_date of this ChannelInfo.  # noqa: E501
        :type stable_date: str
        :param earliest_beta: The earliest_beta of this ChannelInfo.  # noqa: E501
        :type earliest_beta: str
        :param latest_beta: The latest_beta of this ChannelInfo.  # noqa: E501
        :type latest_beta: str
        """
        self.openapi_types = {
            'version': float,
            'mstone': float,
            'stable_date': str,
            'earliest_beta': str,
            'latest_beta': str
        }

        self.attribute_map = {
            'version': 'version',
            'mstone': 'mstone',
            'stable_date': 'stable_date',
            'earliest_beta': 'earliest_beta',
            'latest_beta': 'latest_beta'
        }

        self._version = version
        self._mstone = mstone
        self._stable_date = stable_date
        self._earliest_beta = earliest_beta
        self._latest_beta = latest_beta

    @classmethod
    def from_dict(cls, dikt) -> 'ChannelInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChannelInfo of this ChannelInfo.  # noqa: E501
        :rtype: ChannelInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self) -> float:
        """Gets the version of this ChannelInfo.


        :return: The version of this ChannelInfo.
        :rtype: float
        """
        return self._version

    @version.setter
    def version(self, version: float):
        """Sets the version of this ChannelInfo.


        :param version: The version of this ChannelInfo.
        :type version: float
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")  # noqa: E501

        self._version = version

    @property
    def mstone(self) -> float:
        """Gets the mstone of this ChannelInfo.


        :return: The mstone of this ChannelInfo.
        :rtype: float
        """
        return self._mstone

    @mstone.setter
    def mstone(self, mstone: float):
        """Sets the mstone of this ChannelInfo.


        :param mstone: The mstone of this ChannelInfo.
        :type mstone: float
        """

        self._mstone = mstone

    @property
    def stable_date(self) -> str:
        """Gets the stable_date of this ChannelInfo.


        :return: The stable_date of this ChannelInfo.
        :rtype: str
        """
        return self._stable_date

    @stable_date.setter
    def stable_date(self, stable_date: str):
        """Sets the stable_date of this ChannelInfo.


        :param stable_date: The stable_date of this ChannelInfo.
        :type stable_date: str
        """

        self._stable_date = stable_date

    @property
    def earliest_beta(self) -> str:
        """Gets the earliest_beta of this ChannelInfo.


        :return: The earliest_beta of this ChannelInfo.
        :rtype: str
        """
        return self._earliest_beta

    @earliest_beta.setter
    def earliest_beta(self, earliest_beta: str):
        """Sets the earliest_beta of this ChannelInfo.


        :param earliest_beta: The earliest_beta of this ChannelInfo.
        :type earliest_beta: str
        """

        self._earliest_beta = earliest_beta

    @property
    def latest_beta(self) -> str:
        """Gets the latest_beta of this ChannelInfo.


        :return: The latest_beta of this ChannelInfo.
        :rtype: str
        """
        return self._latest_beta

    @latest_beta.setter
    def latest_beta(self, latest_beta: str):
        """Sets the latest_beta of this ChannelInfo.


        :param latest_beta: The latest_beta of this ChannelInfo.
        :type latest_beta: str
        """

        self._latest_beta = latest_beta
