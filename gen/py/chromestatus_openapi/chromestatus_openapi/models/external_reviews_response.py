from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi.models.link_preview import LinkPreview
from chromestatus_openapi.models.outstanding_review import OutstandingReview
from chromestatus_openapi import util

from chromestatus_openapi.models.link_preview import LinkPreview  # noqa: E501
from chromestatus_openapi.models.outstanding_review import OutstandingReview  # noqa: E501

class ExternalReviewsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reviews=None, link_previews=None):  # noqa: E501
        """ExternalReviewsResponse - a model defined in OpenAPI

        :param reviews: The reviews of this ExternalReviewsResponse.  # noqa: E501
        :type reviews: List[OutstandingReview]
        :param link_previews: The link_previews of this ExternalReviewsResponse.  # noqa: E501
        :type link_previews: List[LinkPreview]
        """
        self.openapi_types = {
            'reviews': List[OutstandingReview],
            'link_previews': List[LinkPreview]
        }

        self.attribute_map = {
            'reviews': 'reviews',
            'link_previews': 'link_previews'
        }

        self._reviews = reviews
        self._link_previews = link_previews

    @classmethod
    def from_dict(cls, dikt) -> 'ExternalReviewsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExternalReviewsResponse of this ExternalReviewsResponse.  # noqa: E501
        :rtype: ExternalReviewsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reviews(self) -> List[OutstandingReview]:
        """Gets the reviews of this ExternalReviewsResponse.


        :return: The reviews of this ExternalReviewsResponse.
        :rtype: List[OutstandingReview]
        """
        return self._reviews

    @reviews.setter
    def reviews(self, reviews: List[OutstandingReview]):
        """Sets the reviews of this ExternalReviewsResponse.


        :param reviews: The reviews of this ExternalReviewsResponse.
        :type reviews: List[OutstandingReview]
        """
        if reviews is None:
            raise ValueError("Invalid value for `reviews`, must not be `None`")  # noqa: E501

        self._reviews = reviews

    @property
    def link_previews(self) -> List[LinkPreview]:
        """Gets the link_previews of this ExternalReviewsResponse.


        :return: The link_previews of this ExternalReviewsResponse.
        :rtype: List[LinkPreview]
        """
        return self._link_previews

    @link_previews.setter
    def link_previews(self, link_previews: List[LinkPreview]):
        """Sets the link_previews of this ExternalReviewsResponse.


        :param link_previews: The link_previews of this ExternalReviewsResponse.
        :type link_previews: List[LinkPreview]
        """
        if link_previews is None:
            raise ValueError("Invalid value for `link_previews`, must not be `None`")  # noqa: E501

        self._link_previews = link_previews
