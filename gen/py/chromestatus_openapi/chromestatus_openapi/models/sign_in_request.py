from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class SignInRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credential=None):  # noqa: E501
        """SignInRequest - a model defined in OpenAPI

        :param credential: The credential of this SignInRequest.  # noqa: E501
        :type credential: str
        """
        self.openapi_types = {
            'credential': str
        }

        self.attribute_map = {
            'credential': 'credential'
        }

        self._credential = credential

    @classmethod
    def from_dict(cls, dikt) -> 'SignInRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SignInRequest of this SignInRequest.  # noqa: E501
        :rtype: SignInRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credential(self) -> str:
        """Gets the credential of this SignInRequest.

        The credential generated by Sign-In With Google.  # noqa: E501

        :return: The credential of this SignInRequest.
        :rtype: str
        """
        return self._credential

    @credential.setter
    def credential(self, credential: str):
        """Sets the credential of this SignInRequest.

        The credential generated by Sign-In With Google.  # noqa: E501

        :param credential: The credential of this SignInRequest.
        :type credential: str
        """
        if credential is None:
            raise ValueError("Invalid value for `credential`, must not be `None`")  # noqa: E501

        self._credential = credential
