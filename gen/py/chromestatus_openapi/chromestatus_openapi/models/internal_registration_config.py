from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class InternalRegistrationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_public_suffix_subdomains=None, approval_type=None, approval_buganizer_component_id=None, approval_buganizer_custom_field_id=None, approval_criteria_url=None, approval_group_email=None):  # noqa: E501
        """InternalRegistrationConfig - a model defined in OpenAPI

        :param allow_public_suffix_subdomains: The allow_public_suffix_subdomains of this InternalRegistrationConfig.  # noqa: E501
        :type allow_public_suffix_subdomains: bool
        :param approval_type: The approval_type of this InternalRegistrationConfig.  # noqa: E501
        :type approval_type: str
        :param approval_buganizer_component_id: The approval_buganizer_component_id of this InternalRegistrationConfig.  # noqa: E501
        :type approval_buganizer_component_id: int
        :param approval_buganizer_custom_field_id: The approval_buganizer_custom_field_id of this InternalRegistrationConfig.  # noqa: E501
        :type approval_buganizer_custom_field_id: int
        :param approval_criteria_url: The approval_criteria_url of this InternalRegistrationConfig.  # noqa: E501
        :type approval_criteria_url: str
        :param approval_group_email: The approval_group_email of this InternalRegistrationConfig.  # noqa: E501
        :type approval_group_email: str
        """
        self.openapi_types = {
            'allow_public_suffix_subdomains': bool,
            'approval_type': str,
            'approval_buganizer_component_id': int,
            'approval_buganizer_custom_field_id': int,
            'approval_criteria_url': str,
            'approval_group_email': str
        }

        self.attribute_map = {
            'allow_public_suffix_subdomains': 'allow_public_suffix_subdomains',
            'approval_type': 'approval_type',
            'approval_buganizer_component_id': 'approval_buganizer_component_id',
            'approval_buganizer_custom_field_id': 'approval_buganizer_custom_field_id',
            'approval_criteria_url': 'approval_criteria_url',
            'approval_group_email': 'approval_group_email'
        }

        self._allow_public_suffix_subdomains = allow_public_suffix_subdomains
        self._approval_type = approval_type
        self._approval_buganizer_component_id = approval_buganizer_component_id
        self._approval_buganizer_custom_field_id = approval_buganizer_custom_field_id
        self._approval_criteria_url = approval_criteria_url
        self._approval_group_email = approval_group_email

    @classmethod
    def from_dict(cls, dikt) -> 'InternalRegistrationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InternalRegistrationConfig of this InternalRegistrationConfig.  # noqa: E501
        :rtype: InternalRegistrationConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_public_suffix_subdomains(self) -> bool:
        """Gets the allow_public_suffix_subdomains of this InternalRegistrationConfig.


        :return: The allow_public_suffix_subdomains of this InternalRegistrationConfig.
        :rtype: bool
        """
        return self._allow_public_suffix_subdomains

    @allow_public_suffix_subdomains.setter
    def allow_public_suffix_subdomains(self, allow_public_suffix_subdomains: bool):
        """Sets the allow_public_suffix_subdomains of this InternalRegistrationConfig.


        :param allow_public_suffix_subdomains: The allow_public_suffix_subdomains of this InternalRegistrationConfig.
        :type allow_public_suffix_subdomains: bool
        """

        self._allow_public_suffix_subdomains = allow_public_suffix_subdomains

    @property
    def approval_type(self) -> str:
        """Gets the approval_type of this InternalRegistrationConfig.


        :return: The approval_type of this InternalRegistrationConfig.
        :rtype: str
        """
        return self._approval_type

    @approval_type.setter
    def approval_type(self, approval_type: str):
        """Sets the approval_type of this InternalRegistrationConfig.


        :param approval_type: The approval_type of this InternalRegistrationConfig.
        :type approval_type: str
        """

        self._approval_type = approval_type

    @property
    def approval_buganizer_component_id(self) -> int:
        """Gets the approval_buganizer_component_id of this InternalRegistrationConfig.


        :return: The approval_buganizer_component_id of this InternalRegistrationConfig.
        :rtype: int
        """
        return self._approval_buganizer_component_id

    @approval_buganizer_component_id.setter
    def approval_buganizer_component_id(self, approval_buganizer_component_id: int):
        """Sets the approval_buganizer_component_id of this InternalRegistrationConfig.


        :param approval_buganizer_component_id: The approval_buganizer_component_id of this InternalRegistrationConfig.
        :type approval_buganizer_component_id: int
        """

        self._approval_buganizer_component_id = approval_buganizer_component_id

    @property
    def approval_buganizer_custom_field_id(self) -> int:
        """Gets the approval_buganizer_custom_field_id of this InternalRegistrationConfig.


        :return: The approval_buganizer_custom_field_id of this InternalRegistrationConfig.
        :rtype: int
        """
        return self._approval_buganizer_custom_field_id

    @approval_buganizer_custom_field_id.setter
    def approval_buganizer_custom_field_id(self, approval_buganizer_custom_field_id: int):
        """Sets the approval_buganizer_custom_field_id of this InternalRegistrationConfig.


        :param approval_buganizer_custom_field_id: The approval_buganizer_custom_field_id of this InternalRegistrationConfig.
        :type approval_buganizer_custom_field_id: int
        """

        self._approval_buganizer_custom_field_id = approval_buganizer_custom_field_id

    @property
    def approval_criteria_url(self) -> str:
        """Gets the approval_criteria_url of this InternalRegistrationConfig.


        :return: The approval_criteria_url of this InternalRegistrationConfig.
        :rtype: str
        """
        return self._approval_criteria_url

    @approval_criteria_url.setter
    def approval_criteria_url(self, approval_criteria_url: str):
        """Sets the approval_criteria_url of this InternalRegistrationConfig.


        :param approval_criteria_url: The approval_criteria_url of this InternalRegistrationConfig.
        :type approval_criteria_url: str
        """

        self._approval_criteria_url = approval_criteria_url

    @property
    def approval_group_email(self) -> str:
        """Gets the approval_group_email of this InternalRegistrationConfig.


        :return: The approval_group_email of this InternalRegistrationConfig.
        :rtype: str
        """
        return self._approval_group_email

    @approval_group_email.setter
    def approval_group_email(self, approval_group_email: str):
        """Sets the approval_group_email of this InternalRegistrationConfig.


        :param approval_group_email: The approval_group_email of this InternalRegistrationConfig.
        :type approval_group_email: str
        """

        self._approval_group_email = approval_group_email
