from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class FeatureDictInnerUserEditInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, by=None, when=None):  # noqa: E501
        """FeatureDictInnerUserEditInfo - a model defined in OpenAPI

        :param by: The by of this FeatureDictInnerUserEditInfo.  # noqa: E501
        :type by: str
        :param when: The when of this FeatureDictInnerUserEditInfo.  # noqa: E501
        :type when: str
        """
        self.openapi_types = {
            'by': str,
            'when': str
        }

        self.attribute_map = {
            'by': 'by',
            'when': 'when'
        }

        self._by = by
        self._when = when

    @classmethod
    def from_dict(cls, dikt) -> 'FeatureDictInnerUserEditInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeatureDictInnerUserEditInfo of this FeatureDictInnerUserEditInfo.  # noqa: E501
        :rtype: FeatureDictInnerUserEditInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def by(self) -> str:
        """Gets the by of this FeatureDictInnerUserEditInfo.


        :return: The by of this FeatureDictInnerUserEditInfo.
        :rtype: str
        """
        return self._by

    @by.setter
    def by(self, by: str):
        """Sets the by of this FeatureDictInnerUserEditInfo.


        :param by: The by of this FeatureDictInnerUserEditInfo.
        :type by: str
        """

        self._by = by

    @property
    def when(self) -> str:
        """Gets the when of this FeatureDictInnerUserEditInfo.


        :return: The when of this FeatureDictInnerUserEditInfo.
        :rtype: str
        """
        return self._when

    @when.setter
    def when(self, when: str):
        """Sets the when of this FeatureDictInnerUserEditInfo.


        :param when: The when of this FeatureDictInnerUserEditInfo.
        :type when: str
        """

        self._when = when
