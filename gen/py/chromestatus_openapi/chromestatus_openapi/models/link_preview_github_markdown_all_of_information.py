from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class LinkPreviewGithubMarkdownAllOfInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parsed_title=None, content=None):  # noqa: E501
        """LinkPreviewGithubMarkdownAllOfInformation - a model defined in OpenAPI

        :param parsed_title: The parsed_title of this LinkPreviewGithubMarkdownAllOfInformation.  # noqa: E501
        :type parsed_title: str
        :param content: The content of this LinkPreviewGithubMarkdownAllOfInformation.  # noqa: E501
        :type content: str
        """
        self.openapi_types = {
            'parsed_title': str,
            'content': str
        }

        self.attribute_map = {
            'parsed_title': '_parsed_title',
            'content': 'content'
        }

        self._parsed_title = parsed_title
        self._content = content

    @classmethod
    def from_dict(cls, dikt) -> 'LinkPreviewGithubMarkdownAllOfInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LinkPreviewGithubMarkdown_allOf_information of this LinkPreviewGithubMarkdownAllOfInformation.  # noqa: E501
        :rtype: LinkPreviewGithubMarkdownAllOfInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parsed_title(self) -> str:
        """Gets the parsed_title of this LinkPreviewGithubMarkdownAllOfInformation.


        :return: The parsed_title of this LinkPreviewGithubMarkdownAllOfInformation.
        :rtype: str
        """
        return self._parsed_title

    @parsed_title.setter
    def parsed_title(self, parsed_title: str):
        """Sets the parsed_title of this LinkPreviewGithubMarkdownAllOfInformation.


        :param parsed_title: The parsed_title of this LinkPreviewGithubMarkdownAllOfInformation.
        :type parsed_title: str
        """

        self._parsed_title = parsed_title

    @property
    def content(self) -> str:
        """Gets the content of this LinkPreviewGithubMarkdownAllOfInformation.


        :return: The content of this LinkPreviewGithubMarkdownAllOfInformation.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this LinkPreviewGithubMarkdownAllOfInformation.


        :param content: The content of this LinkPreviewGithubMarkdownAllOfInformation.
        :type content: str
        """

        self._content = content
