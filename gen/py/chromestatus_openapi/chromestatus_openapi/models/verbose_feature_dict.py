from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi.models.feature_browsers_info import FeatureBrowsersInfo
from chromestatus_openapi.models.feature_dict_inner_resource_info import FeatureDictInnerResourceInfo
from chromestatus_openapi.models.feature_dict_inner_standards_info import FeatureDictInnerStandardsInfo
from chromestatus_openapi.models.feature_dict_inner_user_edit_info import FeatureDictInnerUserEditInfo
from chromestatus_openapi.models.stage_dict import StageDict
from chromestatus_openapi import util

from chromestatus_openapi.models.feature_browsers_info import FeatureBrowsersInfo  # noqa: E501
from chromestatus_openapi.models.feature_dict_inner_resource_info import FeatureDictInnerResourceInfo  # noqa: E501
from chromestatus_openapi.models.feature_dict_inner_standards_info import FeatureDictInnerStandardsInfo  # noqa: E501
from chromestatus_openapi.models.feature_dict_inner_user_edit_info import FeatureDictInnerUserEditInfo  # noqa: E501
from chromestatus_openapi.models.stage_dict import StageDict  # noqa: E501

class VerboseFeatureDict(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, created=None, updated=None, accurate_as_of=None, creator_email=None, updater_email=None, owner_emails=None, editor_emails=None, cc_emails=None, spec_mentor_emails=None, unlisted=None, deleted=None, editors=None, cc_recipients=None, spec_mentors=None, creator=None, name=None, summary=None, category=None, category_int=None, blink_components=None, star_count=None, search_tags=None, feature_notes=None, enterprise_feature_categories=None, feature_type=None, feature_type_int=None, intent_stage=None, intent_stage_int=None, active_stage_id=None, bug_url=None, launch_bug_url=None, screenshot_links=None, first_enterprise_notification_milestone=None, breaking_change=None, enterprise_impact=None, flag_name=None, finch_name=None, non_finch_justification=None, ongoing_constraints=None, motivation=None, devtrial_instructions=None, activation_risks=None, measurement=None, availability_expectation=None, adoption_expectation=None, adoption_plan=None, initial_public_proposal_url=None, explainer_links=None, requires_embedder_support=None, spec_link=None, api_spec=None, prefixed=None, interop_compat_risks=None, all_platforms=None, all_platforms_descr=None, tag_review=None, non_oss_deps=None, anticipated_spec_changes=None, security_risks=None, tags=None, tag_review_status=None, tag_review_status_int=None, security_review_status=None, security_review_status_int=None, privacy_review_status=None, privacy_review_status_int=None, ergonomics_risks=None, wpt=None, wpt_descr=None, webview_risks=None, devrel_emails=None, debuggability=None, doc_links=None, sample_links=None, stages=None, experiment_timeline=None, resources=None, comments=None, ff_views=None, safari_views=None, web_dev_views=None, browsers=None, standards=None, is_released=None, is_enterprise_feature=None, updated_display=None, new_crbug_url=None):  # noqa: E501
        """VerboseFeatureDict - a model defined in OpenAPI

        :param id: The id of this VerboseFeatureDict.  # noqa: E501
        :type id: int
        :param created: The created of this VerboseFeatureDict.  # noqa: E501
        :type created: FeatureDictInnerUserEditInfo
        :param updated: The updated of this VerboseFeatureDict.  # noqa: E501
        :type updated: FeatureDictInnerUserEditInfo
        :param accurate_as_of: The accurate_as_of of this VerboseFeatureDict.  # noqa: E501
        :type accurate_as_of: str
        :param creator_email: The creator_email of this VerboseFeatureDict.  # noqa: E501
        :type creator_email: str
        :param updater_email: The updater_email of this VerboseFeatureDict.  # noqa: E501
        :type updater_email: str
        :param owner_emails: The owner_emails of this VerboseFeatureDict.  # noqa: E501
        :type owner_emails: List[str]
        :param editor_emails: The editor_emails of this VerboseFeatureDict.  # noqa: E501
        :type editor_emails: List[str]
        :param cc_emails: The cc_emails of this VerboseFeatureDict.  # noqa: E501
        :type cc_emails: List[str]
        :param spec_mentor_emails: The spec_mentor_emails of this VerboseFeatureDict.  # noqa: E501
        :type spec_mentor_emails: List[str]
        :param unlisted: The unlisted of this VerboseFeatureDict.  # noqa: E501
        :type unlisted: bool
        :param deleted: The deleted of this VerboseFeatureDict.  # noqa: E501
        :type deleted: bool
        :param editors: The editors of this VerboseFeatureDict.  # noqa: E501
        :type editors: List[str]
        :param cc_recipients: The cc_recipients of this VerboseFeatureDict.  # noqa: E501
        :type cc_recipients: List[str]
        :param spec_mentors: The spec_mentors of this VerboseFeatureDict.  # noqa: E501
        :type spec_mentors: List[str]
        :param creator: The creator of this VerboseFeatureDict.  # noqa: E501
        :type creator: str
        :param name: The name of this VerboseFeatureDict.  # noqa: E501
        :type name: str
        :param summary: The summary of this VerboseFeatureDict.  # noqa: E501
        :type summary: str
        :param category: The category of this VerboseFeatureDict.  # noqa: E501
        :type category: str
        :param category_int: The category_int of this VerboseFeatureDict.  # noqa: E501
        :type category_int: int
        :param blink_components: The blink_components of this VerboseFeatureDict.  # noqa: E501
        :type blink_components: List[str]
        :param star_count: The star_count of this VerboseFeatureDict.  # noqa: E501
        :type star_count: int
        :param search_tags: The search_tags of this VerboseFeatureDict.  # noqa: E501
        :type search_tags: List[str]
        :param feature_notes: The feature_notes of this VerboseFeatureDict.  # noqa: E501
        :type feature_notes: str
        :param enterprise_feature_categories: The enterprise_feature_categories of this VerboseFeatureDict.  # noqa: E501
        :type enterprise_feature_categories: List[str]
        :param feature_type: The feature_type of this VerboseFeatureDict.  # noqa: E501
        :type feature_type: str
        :param feature_type_int: The feature_type_int of this VerboseFeatureDict.  # noqa: E501
        :type feature_type_int: int
        :param intent_stage: The intent_stage of this VerboseFeatureDict.  # noqa: E501
        :type intent_stage: str
        :param intent_stage_int: The intent_stage_int of this VerboseFeatureDict.  # noqa: E501
        :type intent_stage_int: int
        :param active_stage_id: The active_stage_id of this VerboseFeatureDict.  # noqa: E501
        :type active_stage_id: int
        :param bug_url: The bug_url of this VerboseFeatureDict.  # noqa: E501
        :type bug_url: str
        :param launch_bug_url: The launch_bug_url of this VerboseFeatureDict.  # noqa: E501
        :type launch_bug_url: str
        :param screenshot_links: The screenshot_links of this VerboseFeatureDict.  # noqa: E501
        :type screenshot_links: List[str]
        :param first_enterprise_notification_milestone: The first_enterprise_notification_milestone of this VerboseFeatureDict.  # noqa: E501
        :type first_enterprise_notification_milestone: int
        :param breaking_change: The breaking_change of this VerboseFeatureDict.  # noqa: E501
        :type breaking_change: bool
        :param enterprise_impact: The enterprise_impact of this VerboseFeatureDict.  # noqa: E501
        :type enterprise_impact: int
        :param flag_name: The flag_name of this VerboseFeatureDict.  # noqa: E501
        :type flag_name: str
        :param finch_name: The finch_name of this VerboseFeatureDict.  # noqa: E501
        :type finch_name: str
        :param non_finch_justification: The non_finch_justification of this VerboseFeatureDict.  # noqa: E501
        :type non_finch_justification: str
        :param ongoing_constraints: The ongoing_constraints of this VerboseFeatureDict.  # noqa: E501
        :type ongoing_constraints: str
        :param motivation: The motivation of this VerboseFeatureDict.  # noqa: E501
        :type motivation: str
        :param devtrial_instructions: The devtrial_instructions of this VerboseFeatureDict.  # noqa: E501
        :type devtrial_instructions: str
        :param activation_risks: The activation_risks of this VerboseFeatureDict.  # noqa: E501
        :type activation_risks: str
        :param measurement: The measurement of this VerboseFeatureDict.  # noqa: E501
        :type measurement: str
        :param availability_expectation: The availability_expectation of this VerboseFeatureDict.  # noqa: E501
        :type availability_expectation: str
        :param adoption_expectation: The adoption_expectation of this VerboseFeatureDict.  # noqa: E501
        :type adoption_expectation: str
        :param adoption_plan: The adoption_plan of this VerboseFeatureDict.  # noqa: E501
        :type adoption_plan: str
        :param initial_public_proposal_url: The initial_public_proposal_url of this VerboseFeatureDict.  # noqa: E501
        :type initial_public_proposal_url: str
        :param explainer_links: The explainer_links of this VerboseFeatureDict.  # noqa: E501
        :type explainer_links: List[str]
        :param requires_embedder_support: The requires_embedder_support of this VerboseFeatureDict.  # noqa: E501
        :type requires_embedder_support: bool
        :param spec_link: The spec_link of this VerboseFeatureDict.  # noqa: E501
        :type spec_link: str
        :param api_spec: The api_spec of this VerboseFeatureDict.  # noqa: E501
        :type api_spec: str
        :param prefixed: The prefixed of this VerboseFeatureDict.  # noqa: E501
        :type prefixed: bool
        :param interop_compat_risks: The interop_compat_risks of this VerboseFeatureDict.  # noqa: E501
        :type interop_compat_risks: str
        :param all_platforms: The all_platforms of this VerboseFeatureDict.  # noqa: E501
        :type all_platforms: bool
        :param all_platforms_descr: The all_platforms_descr of this VerboseFeatureDict.  # noqa: E501
        :type all_platforms_descr: bool
        :param tag_review: The tag_review of this VerboseFeatureDict.  # noqa: E501
        :type tag_review: str
        :param non_oss_deps: The non_oss_deps of this VerboseFeatureDict.  # noqa: E501
        :type non_oss_deps: str
        :param anticipated_spec_changes: The anticipated_spec_changes of this VerboseFeatureDict.  # noqa: E501
        :type anticipated_spec_changes: str
        :param security_risks: The security_risks of this VerboseFeatureDict.  # noqa: E501
        :type security_risks: str
        :param tags: The tags of this VerboseFeatureDict.  # noqa: E501
        :type tags: List[str]
        :param tag_review_status: The tag_review_status of this VerboseFeatureDict.  # noqa: E501
        :type tag_review_status: str
        :param tag_review_status_int: The tag_review_status_int of this VerboseFeatureDict.  # noqa: E501
        :type tag_review_status_int: int
        :param security_review_status: The security_review_status of this VerboseFeatureDict.  # noqa: E501
        :type security_review_status: str
        :param security_review_status_int: The security_review_status_int of this VerboseFeatureDict.  # noqa: E501
        :type security_review_status_int: int
        :param privacy_review_status: The privacy_review_status of this VerboseFeatureDict.  # noqa: E501
        :type privacy_review_status: str
        :param privacy_review_status_int: The privacy_review_status_int of this VerboseFeatureDict.  # noqa: E501
        :type privacy_review_status_int: int
        :param ergonomics_risks: The ergonomics_risks of this VerboseFeatureDict.  # noqa: E501
        :type ergonomics_risks: str
        :param wpt: The wpt of this VerboseFeatureDict.  # noqa: E501
        :type wpt: bool
        :param wpt_descr: The wpt_descr of this VerboseFeatureDict.  # noqa: E501
        :type wpt_descr: str
        :param webview_risks: The webview_risks of this VerboseFeatureDict.  # noqa: E501
        :type webview_risks: str
        :param devrel_emails: The devrel_emails of this VerboseFeatureDict.  # noqa: E501
        :type devrel_emails: List[str]
        :param debuggability: The debuggability of this VerboseFeatureDict.  # noqa: E501
        :type debuggability: str
        :param doc_links: The doc_links of this VerboseFeatureDict.  # noqa: E501
        :type doc_links: List[str]
        :param sample_links: The sample_links of this VerboseFeatureDict.  # noqa: E501
        :type sample_links: List[str]
        :param stages: The stages of this VerboseFeatureDict.  # noqa: E501
        :type stages: List[StageDict]
        :param experiment_timeline: The experiment_timeline of this VerboseFeatureDict.  # noqa: E501
        :type experiment_timeline: str
        :param resources: The resources of this VerboseFeatureDict.  # noqa: E501
        :type resources: FeatureDictInnerResourceInfo
        :param comments: The comments of this VerboseFeatureDict.  # noqa: E501
        :type comments: str
        :param ff_views: The ff_views of this VerboseFeatureDict.  # noqa: E501
        :type ff_views: int
        :param safari_views: The safari_views of this VerboseFeatureDict.  # noqa: E501
        :type safari_views: int
        :param web_dev_views: The web_dev_views of this VerboseFeatureDict.  # noqa: E501
        :type web_dev_views: int
        :param browsers: The browsers of this VerboseFeatureDict.  # noqa: E501
        :type browsers: FeatureBrowsersInfo
        :param standards: The standards of this VerboseFeatureDict.  # noqa: E501
        :type standards: FeatureDictInnerStandardsInfo
        :param is_released: The is_released of this VerboseFeatureDict.  # noqa: E501
        :type is_released: bool
        :param is_enterprise_feature: The is_enterprise_feature of this VerboseFeatureDict.  # noqa: E501
        :type is_enterprise_feature: bool
        :param updated_display: The updated_display of this VerboseFeatureDict.  # noqa: E501
        :type updated_display: str
        :param new_crbug_url: The new_crbug_url of this VerboseFeatureDict.  # noqa: E501
        :type new_crbug_url: str
        """
        self.openapi_types = {
            'id': int,
            'created': FeatureDictInnerUserEditInfo,
            'updated': FeatureDictInnerUserEditInfo,
            'accurate_as_of': str,
            'creator_email': str,
            'updater_email': str,
            'owner_emails': List[str],
            'editor_emails': List[str],
            'cc_emails': List[str],
            'spec_mentor_emails': List[str],
            'unlisted': bool,
            'deleted': bool,
            'editors': List[str],
            'cc_recipients': List[str],
            'spec_mentors': List[str],
            'creator': str,
            'name': str,
            'summary': str,
            'category': str,
            'category_int': int,
            'blink_components': List[str],
            'star_count': int,
            'search_tags': List[str],
            'feature_notes': str,
            'enterprise_feature_categories': List[str],
            'feature_type': str,
            'feature_type_int': int,
            'intent_stage': str,
            'intent_stage_int': int,
            'active_stage_id': int,
            'bug_url': str,
            'launch_bug_url': str,
            'screenshot_links': List[str],
            'first_enterprise_notification_milestone': int,
            'breaking_change': bool,
            'enterprise_impact': int,
            'flag_name': str,
            'finch_name': str,
            'non_finch_justification': str,
            'ongoing_constraints': str,
            'motivation': str,
            'devtrial_instructions': str,
            'activation_risks': str,
            'measurement': str,
            'availability_expectation': str,
            'adoption_expectation': str,
            'adoption_plan': str,
            'initial_public_proposal_url': str,
            'explainer_links': List[str],
            'requires_embedder_support': bool,
            'spec_link': str,
            'api_spec': str,
            'prefixed': bool,
            'interop_compat_risks': str,
            'all_platforms': bool,
            'all_platforms_descr': bool,
            'tag_review': str,
            'non_oss_deps': str,
            'anticipated_spec_changes': str,
            'security_risks': str,
            'tags': List[str],
            'tag_review_status': str,
            'tag_review_status_int': int,
            'security_review_status': str,
            'security_review_status_int': int,
            'privacy_review_status': str,
            'privacy_review_status_int': int,
            'ergonomics_risks': str,
            'wpt': bool,
            'wpt_descr': str,
            'webview_risks': str,
            'devrel_emails': List[str],
            'debuggability': str,
            'doc_links': List[str],
            'sample_links': List[str],
            'stages': List[StageDict],
            'experiment_timeline': str,
            'resources': FeatureDictInnerResourceInfo,
            'comments': str,
            'ff_views': int,
            'safari_views': int,
            'web_dev_views': int,
            'browsers': FeatureBrowsersInfo,
            'standards': FeatureDictInnerStandardsInfo,
            'is_released': bool,
            'is_enterprise_feature': bool,
            'updated_display': str,
            'new_crbug_url': str
        }

        self.attribute_map = {
            'id': 'id',
            'created': 'created',
            'updated': 'updated',
            'accurate_as_of': 'accurate_as_of',
            'creator_email': 'creator_email',
            'updater_email': 'updater_email',
            'owner_emails': 'owner_emails',
            'editor_emails': 'editor_emails',
            'cc_emails': 'cc_emails',
            'spec_mentor_emails': 'spec_mentor_emails',
            'unlisted': 'unlisted',
            'deleted': 'deleted',
            'editors': 'editors',
            'cc_recipients': 'cc_recipients',
            'spec_mentors': 'spec_mentors',
            'creator': 'creator',
            'name': 'name',
            'summary': 'summary',
            'category': 'category',
            'category_int': 'category_int',
            'blink_components': 'blink_components',
            'star_count': 'star_count',
            'search_tags': 'search_tags',
            'feature_notes': 'feature_notes',
            'enterprise_feature_categories': 'enterprise_feature_categories',
            'feature_type': 'feature_type',
            'feature_type_int': 'feature_type_int',
            'intent_stage': 'intent_stage',
            'intent_stage_int': 'intent_stage_int',
            'active_stage_id': 'active_stage_id',
            'bug_url': 'bug_url',
            'launch_bug_url': 'launch_bug_url',
            'screenshot_links': 'screenshot_links',
            'first_enterprise_notification_milestone': 'first_enterprise_notification_milestone',
            'breaking_change': 'breaking_change',
            'enterprise_impact': 'enterprise_impact',
            'flag_name': 'flag_name',
            'finch_name': 'finch_name',
            'non_finch_justification': 'non_finch_justification',
            'ongoing_constraints': 'ongoing_constraints',
            'motivation': 'motivation',
            'devtrial_instructions': 'devtrial_instructions',
            'activation_risks': 'activation_risks',
            'measurement': 'measurement',
            'availability_expectation': 'availability_expectation',
            'adoption_expectation': 'adoption_expectation',
            'adoption_plan': 'adoption_plan',
            'initial_public_proposal_url': 'initial_public_proposal_url',
            'explainer_links': 'explainer_links',
            'requires_embedder_support': 'requires_embedder_support',
            'spec_link': 'spec_link',
            'api_spec': 'api_spec',
            'prefixed': 'prefixed',
            'interop_compat_risks': 'interop_compat_risks',
            'all_platforms': 'all_platforms',
            'all_platforms_descr': 'all_platforms_descr',
            'tag_review': 'tag_review',
            'non_oss_deps': 'non_oss_deps',
            'anticipated_spec_changes': 'anticipated_spec_changes',
            'security_risks': 'security_risks',
            'tags': 'tags',
            'tag_review_status': 'tag_review_status',
            'tag_review_status_int': 'tag_review_status_int',
            'security_review_status': 'security_review_status',
            'security_review_status_int': 'security_review_status_int',
            'privacy_review_status': 'privacy_review_status',
            'privacy_review_status_int': 'privacy_review_status_int',
            'ergonomics_risks': 'ergonomics_risks',
            'wpt': 'wpt',
            'wpt_descr': 'wpt_descr',
            'webview_risks': 'webview_risks',
            'devrel_emails': 'devrel_emails',
            'debuggability': 'debuggability',
            'doc_links': 'doc_links',
            'sample_links': 'sample_links',
            'stages': 'stages',
            'experiment_timeline': 'experiment_timeline',
            'resources': 'resources',
            'comments': 'comments',
            'ff_views': 'ff_views',
            'safari_views': 'safari_views',
            'web_dev_views': 'web_dev_views',
            'browsers': 'browsers',
            'standards': 'standards',
            'is_released': 'is_released',
            'is_enterprise_feature': 'is_enterprise_feature',
            'updated_display': 'updated_display',
            'new_crbug_url': 'new_crbug_url'
        }

        self._id = id
        self._created = created
        self._updated = updated
        self._accurate_as_of = accurate_as_of
        self._creator_email = creator_email
        self._updater_email = updater_email
        self._owner_emails = owner_emails
        self._editor_emails = editor_emails
        self._cc_emails = cc_emails
        self._spec_mentor_emails = spec_mentor_emails
        self._unlisted = unlisted
        self._deleted = deleted
        self._editors = editors
        self._cc_recipients = cc_recipients
        self._spec_mentors = spec_mentors
        self._creator = creator
        self._name = name
        self._summary = summary
        self._category = category
        self._category_int = category_int
        self._blink_components = blink_components
        self._star_count = star_count
        self._search_tags = search_tags
        self._feature_notes = feature_notes
        self._enterprise_feature_categories = enterprise_feature_categories
        self._feature_type = feature_type
        self._feature_type_int = feature_type_int
        self._intent_stage = intent_stage
        self._intent_stage_int = intent_stage_int
        self._active_stage_id = active_stage_id
        self._bug_url = bug_url
        self._launch_bug_url = launch_bug_url
        self._screenshot_links = screenshot_links
        self._first_enterprise_notification_milestone = first_enterprise_notification_milestone
        self._breaking_change = breaking_change
        self._enterprise_impact = enterprise_impact
        self._flag_name = flag_name
        self._finch_name = finch_name
        self._non_finch_justification = non_finch_justification
        self._ongoing_constraints = ongoing_constraints
        self._motivation = motivation
        self._devtrial_instructions = devtrial_instructions
        self._activation_risks = activation_risks
        self._measurement = measurement
        self._availability_expectation = availability_expectation
        self._adoption_expectation = adoption_expectation
        self._adoption_plan = adoption_plan
        self._initial_public_proposal_url = initial_public_proposal_url
        self._explainer_links = explainer_links
        self._requires_embedder_support = requires_embedder_support
        self._spec_link = spec_link
        self._api_spec = api_spec
        self._prefixed = prefixed
        self._interop_compat_risks = interop_compat_risks
        self._all_platforms = all_platforms
        self._all_platforms_descr = all_platforms_descr
        self._tag_review = tag_review
        self._non_oss_deps = non_oss_deps
        self._anticipated_spec_changes = anticipated_spec_changes
        self._security_risks = security_risks
        self._tags = tags
        self._tag_review_status = tag_review_status
        self._tag_review_status_int = tag_review_status_int
        self._security_review_status = security_review_status
        self._security_review_status_int = security_review_status_int
        self._privacy_review_status = privacy_review_status
        self._privacy_review_status_int = privacy_review_status_int
        self._ergonomics_risks = ergonomics_risks
        self._wpt = wpt
        self._wpt_descr = wpt_descr
        self._webview_risks = webview_risks
        self._devrel_emails = devrel_emails
        self._debuggability = debuggability
        self._doc_links = doc_links
        self._sample_links = sample_links
        self._stages = stages
        self._experiment_timeline = experiment_timeline
        self._resources = resources
        self._comments = comments
        self._ff_views = ff_views
        self._safari_views = safari_views
        self._web_dev_views = web_dev_views
        self._browsers = browsers
        self._standards = standards
        self._is_released = is_released
        self._is_enterprise_feature = is_enterprise_feature
        self._updated_display = updated_display
        self._new_crbug_url = new_crbug_url

    @classmethod
    def from_dict(cls, dikt) -> 'VerboseFeatureDict':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VerboseFeatureDict of this VerboseFeatureDict.  # noqa: E501
        :rtype: VerboseFeatureDict
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this VerboseFeatureDict.

        metadata  # noqa: E501

        :return: The id of this VerboseFeatureDict.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this VerboseFeatureDict.

        metadata  # noqa: E501

        :param id: The id of this VerboseFeatureDict.
        :type id: int
        """

        self._id = id

    @property
    def created(self) -> FeatureDictInnerUserEditInfo:
        """Gets the created of this VerboseFeatureDict.


        :return: The created of this VerboseFeatureDict.
        :rtype: FeatureDictInnerUserEditInfo
        """
        return self._created

    @created.setter
    def created(self, created: FeatureDictInnerUserEditInfo):
        """Sets the created of this VerboseFeatureDict.


        :param created: The created of this VerboseFeatureDict.
        :type created: FeatureDictInnerUserEditInfo
        """

        self._created = created

    @property
    def updated(self) -> FeatureDictInnerUserEditInfo:
        """Gets the updated of this VerboseFeatureDict.


        :return: The updated of this VerboseFeatureDict.
        :rtype: FeatureDictInnerUserEditInfo
        """
        return self._updated

    @updated.setter
    def updated(self, updated: FeatureDictInnerUserEditInfo):
        """Sets the updated of this VerboseFeatureDict.


        :param updated: The updated of this VerboseFeatureDict.
        :type updated: FeatureDictInnerUserEditInfo
        """

        self._updated = updated

    @property
    def accurate_as_of(self) -> str:
        """Gets the accurate_as_of of this VerboseFeatureDict.


        :return: The accurate_as_of of this VerboseFeatureDict.
        :rtype: str
        """
        return self._accurate_as_of

    @accurate_as_of.setter
    def accurate_as_of(self, accurate_as_of: str):
        """Sets the accurate_as_of of this VerboseFeatureDict.


        :param accurate_as_of: The accurate_as_of of this VerboseFeatureDict.
        :type accurate_as_of: str
        """

        self._accurate_as_of = accurate_as_of

    @property
    def creator_email(self) -> str:
        """Gets the creator_email of this VerboseFeatureDict.


        :return: The creator_email of this VerboseFeatureDict.
        :rtype: str
        """
        return self._creator_email

    @creator_email.setter
    def creator_email(self, creator_email: str):
        """Sets the creator_email of this VerboseFeatureDict.


        :param creator_email: The creator_email of this VerboseFeatureDict.
        :type creator_email: str
        """

        self._creator_email = creator_email

    @property
    def updater_email(self) -> str:
        """Gets the updater_email of this VerboseFeatureDict.


        :return: The updater_email of this VerboseFeatureDict.
        :rtype: str
        """
        return self._updater_email

    @updater_email.setter
    def updater_email(self, updater_email: str):
        """Sets the updater_email of this VerboseFeatureDict.


        :param updater_email: The updater_email of this VerboseFeatureDict.
        :type updater_email: str
        """

        self._updater_email = updater_email

    @property
    def owner_emails(self) -> List[str]:
        """Gets the owner_emails of this VerboseFeatureDict.


        :return: The owner_emails of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._owner_emails

    @owner_emails.setter
    def owner_emails(self, owner_emails: List[str]):
        """Sets the owner_emails of this VerboseFeatureDict.


        :param owner_emails: The owner_emails of this VerboseFeatureDict.
        :type owner_emails: List[str]
        """

        self._owner_emails = owner_emails

    @property
    def editor_emails(self) -> List[str]:
        """Gets the editor_emails of this VerboseFeatureDict.


        :return: The editor_emails of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._editor_emails

    @editor_emails.setter
    def editor_emails(self, editor_emails: List[str]):
        """Sets the editor_emails of this VerboseFeatureDict.


        :param editor_emails: The editor_emails of this VerboseFeatureDict.
        :type editor_emails: List[str]
        """

        self._editor_emails = editor_emails

    @property
    def cc_emails(self) -> List[str]:
        """Gets the cc_emails of this VerboseFeatureDict.


        :return: The cc_emails of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._cc_emails

    @cc_emails.setter
    def cc_emails(self, cc_emails: List[str]):
        """Sets the cc_emails of this VerboseFeatureDict.


        :param cc_emails: The cc_emails of this VerboseFeatureDict.
        :type cc_emails: List[str]
        """

        self._cc_emails = cc_emails

    @property
    def spec_mentor_emails(self) -> List[str]:
        """Gets the spec_mentor_emails of this VerboseFeatureDict.


        :return: The spec_mentor_emails of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._spec_mentor_emails

    @spec_mentor_emails.setter
    def spec_mentor_emails(self, spec_mentor_emails: List[str]):
        """Sets the spec_mentor_emails of this VerboseFeatureDict.


        :param spec_mentor_emails: The spec_mentor_emails of this VerboseFeatureDict.
        :type spec_mentor_emails: List[str]
        """

        self._spec_mentor_emails = spec_mentor_emails

    @property
    def unlisted(self) -> bool:
        """Gets the unlisted of this VerboseFeatureDict.


        :return: The unlisted of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._unlisted

    @unlisted.setter
    def unlisted(self, unlisted: bool):
        """Sets the unlisted of this VerboseFeatureDict.


        :param unlisted: The unlisted of this VerboseFeatureDict.
        :type unlisted: bool
        """

        self._unlisted = unlisted

    @property
    def deleted(self) -> bool:
        """Gets the deleted of this VerboseFeatureDict.


        :return: The deleted of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted: bool):
        """Sets the deleted of this VerboseFeatureDict.


        :param deleted: The deleted of this VerboseFeatureDict.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def editors(self) -> List[str]:
        """Gets the editors of this VerboseFeatureDict.

        renamed metadata fields  # noqa: E501

        :return: The editors of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._editors

    @editors.setter
    def editors(self, editors: List[str]):
        """Sets the editors of this VerboseFeatureDict.

        renamed metadata fields  # noqa: E501

        :param editors: The editors of this VerboseFeatureDict.
        :type editors: List[str]
        """

        self._editors = editors

    @property
    def cc_recipients(self) -> List[str]:
        """Gets the cc_recipients of this VerboseFeatureDict.


        :return: The cc_recipients of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._cc_recipients

    @cc_recipients.setter
    def cc_recipients(self, cc_recipients: List[str]):
        """Sets the cc_recipients of this VerboseFeatureDict.


        :param cc_recipients: The cc_recipients of this VerboseFeatureDict.
        :type cc_recipients: List[str]
        """

        self._cc_recipients = cc_recipients

    @property
    def spec_mentors(self) -> List[str]:
        """Gets the spec_mentors of this VerboseFeatureDict.


        :return: The spec_mentors of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._spec_mentors

    @spec_mentors.setter
    def spec_mentors(self, spec_mentors: List[str]):
        """Sets the spec_mentors of this VerboseFeatureDict.


        :param spec_mentors: The spec_mentors of this VerboseFeatureDict.
        :type spec_mentors: List[str]
        """

        self._spec_mentors = spec_mentors

    @property
    def creator(self) -> str:
        """Gets the creator of this VerboseFeatureDict.


        :return: The creator of this VerboseFeatureDict.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator: str):
        """Sets the creator of this VerboseFeatureDict.


        :param creator: The creator of this VerboseFeatureDict.
        :type creator: str
        """

        self._creator = creator

    @property
    def name(self) -> str:
        """Gets the name of this VerboseFeatureDict.

        descriptive info  # noqa: E501

        :return: The name of this VerboseFeatureDict.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this VerboseFeatureDict.

        descriptive info  # noqa: E501

        :param name: The name of this VerboseFeatureDict.
        :type name: str
        """

        self._name = name

    @property
    def summary(self) -> str:
        """Gets the summary of this VerboseFeatureDict.


        :return: The summary of this VerboseFeatureDict.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary: str):
        """Sets the summary of this VerboseFeatureDict.


        :param summary: The summary of this VerboseFeatureDict.
        :type summary: str
        """

        self._summary = summary

    @property
    def category(self) -> str:
        """Gets the category of this VerboseFeatureDict.


        :return: The category of this VerboseFeatureDict.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this VerboseFeatureDict.


        :param category: The category of this VerboseFeatureDict.
        :type category: str
        """

        self._category = category

    @property
    def category_int(self) -> int:
        """Gets the category_int of this VerboseFeatureDict.


        :return: The category_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._category_int

    @category_int.setter
    def category_int(self, category_int: int):
        """Sets the category_int of this VerboseFeatureDict.


        :param category_int: The category_int of this VerboseFeatureDict.
        :type category_int: int
        """

        self._category_int = category_int

    @property
    def blink_components(self) -> List[str]:
        """Gets the blink_components of this VerboseFeatureDict.


        :return: The blink_components of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._blink_components

    @blink_components.setter
    def blink_components(self, blink_components: List[str]):
        """Sets the blink_components of this VerboseFeatureDict.


        :param blink_components: The blink_components of this VerboseFeatureDict.
        :type blink_components: List[str]
        """

        self._blink_components = blink_components

    @property
    def star_count(self) -> int:
        """Gets the star_count of this VerboseFeatureDict.


        :return: The star_count of this VerboseFeatureDict.
        :rtype: int
        """
        return self._star_count

    @star_count.setter
    def star_count(self, star_count: int):
        """Sets the star_count of this VerboseFeatureDict.


        :param star_count: The star_count of this VerboseFeatureDict.
        :type star_count: int
        """

        self._star_count = star_count

    @property
    def search_tags(self) -> List[str]:
        """Gets the search_tags of this VerboseFeatureDict.


        :return: The search_tags of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._search_tags

    @search_tags.setter
    def search_tags(self, search_tags: List[str]):
        """Sets the search_tags of this VerboseFeatureDict.


        :param search_tags: The search_tags of this VerboseFeatureDict.
        :type search_tags: List[str]
        """

        self._search_tags = search_tags

    @property
    def feature_notes(self) -> str:
        """Gets the feature_notes of this VerboseFeatureDict.


        :return: The feature_notes of this VerboseFeatureDict.
        :rtype: str
        """
        return self._feature_notes

    @feature_notes.setter
    def feature_notes(self, feature_notes: str):
        """Sets the feature_notes of this VerboseFeatureDict.


        :param feature_notes: The feature_notes of this VerboseFeatureDict.
        :type feature_notes: str
        """

        self._feature_notes = feature_notes

    @property
    def enterprise_feature_categories(self) -> List[str]:
        """Gets the enterprise_feature_categories of this VerboseFeatureDict.


        :return: The enterprise_feature_categories of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._enterprise_feature_categories

    @enterprise_feature_categories.setter
    def enterprise_feature_categories(self, enterprise_feature_categories: List[str]):
        """Sets the enterprise_feature_categories of this VerboseFeatureDict.


        :param enterprise_feature_categories: The enterprise_feature_categories of this VerboseFeatureDict.
        :type enterprise_feature_categories: List[str]
        """

        self._enterprise_feature_categories = enterprise_feature_categories

    @property
    def feature_type(self) -> str:
        """Gets the feature_type of this VerboseFeatureDict.

        metadata - process info  # noqa: E501

        :return: The feature_type of this VerboseFeatureDict.
        :rtype: str
        """
        return self._feature_type

    @feature_type.setter
    def feature_type(self, feature_type: str):
        """Sets the feature_type of this VerboseFeatureDict.

        metadata - process info  # noqa: E501

        :param feature_type: The feature_type of this VerboseFeatureDict.
        :type feature_type: str
        """

        self._feature_type = feature_type

    @property
    def feature_type_int(self) -> int:
        """Gets the feature_type_int of this VerboseFeatureDict.


        :return: The feature_type_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._feature_type_int

    @feature_type_int.setter
    def feature_type_int(self, feature_type_int: int):
        """Sets the feature_type_int of this VerboseFeatureDict.


        :param feature_type_int: The feature_type_int of this VerboseFeatureDict.
        :type feature_type_int: int
        """

        self._feature_type_int = feature_type_int

    @property
    def intent_stage(self) -> str:
        """Gets the intent_stage of this VerboseFeatureDict.


        :return: The intent_stage of this VerboseFeatureDict.
        :rtype: str
        """
        return self._intent_stage

    @intent_stage.setter
    def intent_stage(self, intent_stage: str):
        """Sets the intent_stage of this VerboseFeatureDict.


        :param intent_stage: The intent_stage of this VerboseFeatureDict.
        :type intent_stage: str
        """

        self._intent_stage = intent_stage

    @property
    def intent_stage_int(self) -> int:
        """Gets the intent_stage_int of this VerboseFeatureDict.


        :return: The intent_stage_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._intent_stage_int

    @intent_stage_int.setter
    def intent_stage_int(self, intent_stage_int: int):
        """Sets the intent_stage_int of this VerboseFeatureDict.


        :param intent_stage_int: The intent_stage_int of this VerboseFeatureDict.
        :type intent_stage_int: int
        """

        self._intent_stage_int = intent_stage_int

    @property
    def active_stage_id(self) -> int:
        """Gets the active_stage_id of this VerboseFeatureDict.


        :return: The active_stage_id of this VerboseFeatureDict.
        :rtype: int
        """
        return self._active_stage_id

    @active_stage_id.setter
    def active_stage_id(self, active_stage_id: int):
        """Sets the active_stage_id of this VerboseFeatureDict.


        :param active_stage_id: The active_stage_id of this VerboseFeatureDict.
        :type active_stage_id: int
        """

        self._active_stage_id = active_stage_id

    @property
    def bug_url(self) -> str:
        """Gets the bug_url of this VerboseFeatureDict.


        :return: The bug_url of this VerboseFeatureDict.
        :rtype: str
        """
        return self._bug_url

    @bug_url.setter
    def bug_url(self, bug_url: str):
        """Sets the bug_url of this VerboseFeatureDict.


        :param bug_url: The bug_url of this VerboseFeatureDict.
        :type bug_url: str
        """

        self._bug_url = bug_url

    @property
    def launch_bug_url(self) -> str:
        """Gets the launch_bug_url of this VerboseFeatureDict.


        :return: The launch_bug_url of this VerboseFeatureDict.
        :rtype: str
        """
        return self._launch_bug_url

    @launch_bug_url.setter
    def launch_bug_url(self, launch_bug_url: str):
        """Sets the launch_bug_url of this VerboseFeatureDict.


        :param launch_bug_url: The launch_bug_url of this VerboseFeatureDict.
        :type launch_bug_url: str
        """

        self._launch_bug_url = launch_bug_url

    @property
    def screenshot_links(self) -> List[str]:
        """Gets the screenshot_links of this VerboseFeatureDict.


        :return: The screenshot_links of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._screenshot_links

    @screenshot_links.setter
    def screenshot_links(self, screenshot_links: List[str]):
        """Sets the screenshot_links of this VerboseFeatureDict.


        :param screenshot_links: The screenshot_links of this VerboseFeatureDict.
        :type screenshot_links: List[str]
        """

        self._screenshot_links = screenshot_links

    @property
    def first_enterprise_notification_milestone(self) -> int:
        """Gets the first_enterprise_notification_milestone of this VerboseFeatureDict.


        :return: The first_enterprise_notification_milestone of this VerboseFeatureDict.
        :rtype: int
        """
        return self._first_enterprise_notification_milestone

    @first_enterprise_notification_milestone.setter
    def first_enterprise_notification_milestone(self, first_enterprise_notification_milestone: int):
        """Sets the first_enterprise_notification_milestone of this VerboseFeatureDict.


        :param first_enterprise_notification_milestone: The first_enterprise_notification_milestone of this VerboseFeatureDict.
        :type first_enterprise_notification_milestone: int
        """

        self._first_enterprise_notification_milestone = first_enterprise_notification_milestone

    @property
    def breaking_change(self) -> bool:
        """Gets the breaking_change of this VerboseFeatureDict.


        :return: The breaking_change of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._breaking_change

    @breaking_change.setter
    def breaking_change(self, breaking_change: bool):
        """Sets the breaking_change of this VerboseFeatureDict.


        :param breaking_change: The breaking_change of this VerboseFeatureDict.
        :type breaking_change: bool
        """

        self._breaking_change = breaking_change

    @property
    def enterprise_impact(self) -> int:
        """Gets the enterprise_impact of this VerboseFeatureDict.


        :return: The enterprise_impact of this VerboseFeatureDict.
        :rtype: int
        """
        return self._enterprise_impact

    @enterprise_impact.setter
    def enterprise_impact(self, enterprise_impact: int):
        """Sets the enterprise_impact of this VerboseFeatureDict.


        :param enterprise_impact: The enterprise_impact of this VerboseFeatureDict.
        :type enterprise_impact: int
        """

        self._enterprise_impact = enterprise_impact

    @property
    def flag_name(self) -> str:
        """Gets the flag_name of this VerboseFeatureDict.

        Implementation in Chrome  # noqa: E501

        :return: The flag_name of this VerboseFeatureDict.
        :rtype: str
        """
        return self._flag_name

    @flag_name.setter
    def flag_name(self, flag_name: str):
        """Sets the flag_name of this VerboseFeatureDict.

        Implementation in Chrome  # noqa: E501

        :param flag_name: The flag_name of this VerboseFeatureDict.
        :type flag_name: str
        """

        self._flag_name = flag_name

    @property
    def finch_name(self) -> str:
        """Gets the finch_name of this VerboseFeatureDict.


        :return: The finch_name of this VerboseFeatureDict.
        :rtype: str
        """
        return self._finch_name

    @finch_name.setter
    def finch_name(self, finch_name: str):
        """Sets the finch_name of this VerboseFeatureDict.


        :param finch_name: The finch_name of this VerboseFeatureDict.
        :type finch_name: str
        """

        self._finch_name = finch_name

    @property
    def non_finch_justification(self) -> str:
        """Gets the non_finch_justification of this VerboseFeatureDict.


        :return: The non_finch_justification of this VerboseFeatureDict.
        :rtype: str
        """
        return self._non_finch_justification

    @non_finch_justification.setter
    def non_finch_justification(self, non_finch_justification: str):
        """Sets the non_finch_justification of this VerboseFeatureDict.


        :param non_finch_justification: The non_finch_justification of this VerboseFeatureDict.
        :type non_finch_justification: str
        """

        self._non_finch_justification = non_finch_justification

    @property
    def ongoing_constraints(self) -> str:
        """Gets the ongoing_constraints of this VerboseFeatureDict.


        :return: The ongoing_constraints of this VerboseFeatureDict.
        :rtype: str
        """
        return self._ongoing_constraints

    @ongoing_constraints.setter
    def ongoing_constraints(self, ongoing_constraints: str):
        """Sets the ongoing_constraints of this VerboseFeatureDict.


        :param ongoing_constraints: The ongoing_constraints of this VerboseFeatureDict.
        :type ongoing_constraints: str
        """

        self._ongoing_constraints = ongoing_constraints

    @property
    def motivation(self) -> str:
        """Gets the motivation of this VerboseFeatureDict.

        Topic - Adoption  # noqa: E501

        :return: The motivation of this VerboseFeatureDict.
        :rtype: str
        """
        return self._motivation

    @motivation.setter
    def motivation(self, motivation: str):
        """Sets the motivation of this VerboseFeatureDict.

        Topic - Adoption  # noqa: E501

        :param motivation: The motivation of this VerboseFeatureDict.
        :type motivation: str
        """

        self._motivation = motivation

    @property
    def devtrial_instructions(self) -> str:
        """Gets the devtrial_instructions of this VerboseFeatureDict.


        :return: The devtrial_instructions of this VerboseFeatureDict.
        :rtype: str
        """
        return self._devtrial_instructions

    @devtrial_instructions.setter
    def devtrial_instructions(self, devtrial_instructions: str):
        """Sets the devtrial_instructions of this VerboseFeatureDict.


        :param devtrial_instructions: The devtrial_instructions of this VerboseFeatureDict.
        :type devtrial_instructions: str
        """

        self._devtrial_instructions = devtrial_instructions

    @property
    def activation_risks(self) -> str:
        """Gets the activation_risks of this VerboseFeatureDict.


        :return: The activation_risks of this VerboseFeatureDict.
        :rtype: str
        """
        return self._activation_risks

    @activation_risks.setter
    def activation_risks(self, activation_risks: str):
        """Sets the activation_risks of this VerboseFeatureDict.


        :param activation_risks: The activation_risks of this VerboseFeatureDict.
        :type activation_risks: str
        """

        self._activation_risks = activation_risks

    @property
    def measurement(self) -> str:
        """Gets the measurement of this VerboseFeatureDict.


        :return: The measurement of this VerboseFeatureDict.
        :rtype: str
        """
        return self._measurement

    @measurement.setter
    def measurement(self, measurement: str):
        """Sets the measurement of this VerboseFeatureDict.


        :param measurement: The measurement of this VerboseFeatureDict.
        :type measurement: str
        """

        self._measurement = measurement

    @property
    def availability_expectation(self) -> str:
        """Gets the availability_expectation of this VerboseFeatureDict.


        :return: The availability_expectation of this VerboseFeatureDict.
        :rtype: str
        """
        return self._availability_expectation

    @availability_expectation.setter
    def availability_expectation(self, availability_expectation: str):
        """Sets the availability_expectation of this VerboseFeatureDict.


        :param availability_expectation: The availability_expectation of this VerboseFeatureDict.
        :type availability_expectation: str
        """

        self._availability_expectation = availability_expectation

    @property
    def adoption_expectation(self) -> str:
        """Gets the adoption_expectation of this VerboseFeatureDict.


        :return: The adoption_expectation of this VerboseFeatureDict.
        :rtype: str
        """
        return self._adoption_expectation

    @adoption_expectation.setter
    def adoption_expectation(self, adoption_expectation: str):
        """Sets the adoption_expectation of this VerboseFeatureDict.


        :param adoption_expectation: The adoption_expectation of this VerboseFeatureDict.
        :type adoption_expectation: str
        """

        self._adoption_expectation = adoption_expectation

    @property
    def adoption_plan(self) -> str:
        """Gets the adoption_plan of this VerboseFeatureDict.


        :return: The adoption_plan of this VerboseFeatureDict.
        :rtype: str
        """
        return self._adoption_plan

    @adoption_plan.setter
    def adoption_plan(self, adoption_plan: str):
        """Sets the adoption_plan of this VerboseFeatureDict.


        :param adoption_plan: The adoption_plan of this VerboseFeatureDict.
        :type adoption_plan: str
        """

        self._adoption_plan = adoption_plan

    @property
    def initial_public_proposal_url(self) -> str:
        """Gets the initial_public_proposal_url of this VerboseFeatureDict.

        Gate  # noqa: E501

        :return: The initial_public_proposal_url of this VerboseFeatureDict.
        :rtype: str
        """
        return self._initial_public_proposal_url

    @initial_public_proposal_url.setter
    def initial_public_proposal_url(self, initial_public_proposal_url: str):
        """Sets the initial_public_proposal_url of this VerboseFeatureDict.

        Gate  # noqa: E501

        :param initial_public_proposal_url: The initial_public_proposal_url of this VerboseFeatureDict.
        :type initial_public_proposal_url: str
        """

        self._initial_public_proposal_url = initial_public_proposal_url

    @property
    def explainer_links(self) -> List[str]:
        """Gets the explainer_links of this VerboseFeatureDict.


        :return: The explainer_links of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._explainer_links

    @explainer_links.setter
    def explainer_links(self, explainer_links: List[str]):
        """Sets the explainer_links of this VerboseFeatureDict.


        :param explainer_links: The explainer_links of this VerboseFeatureDict.
        :type explainer_links: List[str]
        """

        self._explainer_links = explainer_links

    @property
    def requires_embedder_support(self) -> bool:
        """Gets the requires_embedder_support of this VerboseFeatureDict.


        :return: The requires_embedder_support of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._requires_embedder_support

    @requires_embedder_support.setter
    def requires_embedder_support(self, requires_embedder_support: bool):
        """Sets the requires_embedder_support of this VerboseFeatureDict.


        :param requires_embedder_support: The requires_embedder_support of this VerboseFeatureDict.
        :type requires_embedder_support: bool
        """

        self._requires_embedder_support = requires_embedder_support

    @property
    def spec_link(self) -> str:
        """Gets the spec_link of this VerboseFeatureDict.


        :return: The spec_link of this VerboseFeatureDict.
        :rtype: str
        """
        return self._spec_link

    @spec_link.setter
    def spec_link(self, spec_link: str):
        """Sets the spec_link of this VerboseFeatureDict.


        :param spec_link: The spec_link of this VerboseFeatureDict.
        :type spec_link: str
        """

        self._spec_link = spec_link

    @property
    def api_spec(self) -> str:
        """Gets the api_spec of this VerboseFeatureDict.


        :return: The api_spec of this VerboseFeatureDict.
        :rtype: str
        """
        return self._api_spec

    @api_spec.setter
    def api_spec(self, api_spec: str):
        """Sets the api_spec of this VerboseFeatureDict.


        :param api_spec: The api_spec of this VerboseFeatureDict.
        :type api_spec: str
        """

        self._api_spec = api_spec

    @property
    def prefixed(self) -> bool:
        """Gets the prefixed of this VerboseFeatureDict.


        :return: The prefixed of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._prefixed

    @prefixed.setter
    def prefixed(self, prefixed: bool):
        """Sets the prefixed of this VerboseFeatureDict.


        :param prefixed: The prefixed of this VerboseFeatureDict.
        :type prefixed: bool
        """

        self._prefixed = prefixed

    @property
    def interop_compat_risks(self) -> str:
        """Gets the interop_compat_risks of this VerboseFeatureDict.


        :return: The interop_compat_risks of this VerboseFeatureDict.
        :rtype: str
        """
        return self._interop_compat_risks

    @interop_compat_risks.setter
    def interop_compat_risks(self, interop_compat_risks: str):
        """Sets the interop_compat_risks of this VerboseFeatureDict.


        :param interop_compat_risks: The interop_compat_risks of this VerboseFeatureDict.
        :type interop_compat_risks: str
        """

        self._interop_compat_risks = interop_compat_risks

    @property
    def all_platforms(self) -> bool:
        """Gets the all_platforms of this VerboseFeatureDict.


        :return: The all_platforms of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._all_platforms

    @all_platforms.setter
    def all_platforms(self, all_platforms: bool):
        """Sets the all_platforms of this VerboseFeatureDict.


        :param all_platforms: The all_platforms of this VerboseFeatureDict.
        :type all_platforms: bool
        """

        self._all_platforms = all_platforms

    @property
    def all_platforms_descr(self) -> bool:
        """Gets the all_platforms_descr of this VerboseFeatureDict.


        :return: The all_platforms_descr of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._all_platforms_descr

    @all_platforms_descr.setter
    def all_platforms_descr(self, all_platforms_descr: bool):
        """Sets the all_platforms_descr of this VerboseFeatureDict.


        :param all_platforms_descr: The all_platforms_descr of this VerboseFeatureDict.
        :type all_platforms_descr: bool
        """

        self._all_platforms_descr = all_platforms_descr

    @property
    def tag_review(self) -> str:
        """Gets the tag_review of this VerboseFeatureDict.


        :return: The tag_review of this VerboseFeatureDict.
        :rtype: str
        """
        return self._tag_review

    @tag_review.setter
    def tag_review(self, tag_review: str):
        """Sets the tag_review of this VerboseFeatureDict.


        :param tag_review: The tag_review of this VerboseFeatureDict.
        :type tag_review: str
        """

        self._tag_review = tag_review

    @property
    def non_oss_deps(self) -> str:
        """Gets the non_oss_deps of this VerboseFeatureDict.


        :return: The non_oss_deps of this VerboseFeatureDict.
        :rtype: str
        """
        return self._non_oss_deps

    @non_oss_deps.setter
    def non_oss_deps(self, non_oss_deps: str):
        """Sets the non_oss_deps of this VerboseFeatureDict.


        :param non_oss_deps: The non_oss_deps of this VerboseFeatureDict.
        :type non_oss_deps: str
        """

        self._non_oss_deps = non_oss_deps

    @property
    def anticipated_spec_changes(self) -> str:
        """Gets the anticipated_spec_changes of this VerboseFeatureDict.


        :return: The anticipated_spec_changes of this VerboseFeatureDict.
        :rtype: str
        """
        return self._anticipated_spec_changes

    @anticipated_spec_changes.setter
    def anticipated_spec_changes(self, anticipated_spec_changes: str):
        """Sets the anticipated_spec_changes of this VerboseFeatureDict.


        :param anticipated_spec_changes: The anticipated_spec_changes of this VerboseFeatureDict.
        :type anticipated_spec_changes: str
        """

        self._anticipated_spec_changes = anticipated_spec_changes

    @property
    def security_risks(self) -> str:
        """Gets the security_risks of this VerboseFeatureDict.


        :return: The security_risks of this VerboseFeatureDict.
        :rtype: str
        """
        return self._security_risks

    @security_risks.setter
    def security_risks(self, security_risks: str):
        """Sets the security_risks of this VerboseFeatureDict.


        :param security_risks: The security_risks of this VerboseFeatureDict.
        :type security_risks: str
        """

        self._security_risks = security_risks

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this VerboseFeatureDict.


        :return: The tags of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this VerboseFeatureDict.


        :param tags: The tags of this VerboseFeatureDict.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def tag_review_status(self) -> str:
        """Gets the tag_review_status of this VerboseFeatureDict.


        :return: The tag_review_status of this VerboseFeatureDict.
        :rtype: str
        """
        return self._tag_review_status

    @tag_review_status.setter
    def tag_review_status(self, tag_review_status: str):
        """Sets the tag_review_status of this VerboseFeatureDict.


        :param tag_review_status: The tag_review_status of this VerboseFeatureDict.
        :type tag_review_status: str
        """

        self._tag_review_status = tag_review_status

    @property
    def tag_review_status_int(self) -> int:
        """Gets the tag_review_status_int of this VerboseFeatureDict.


        :return: The tag_review_status_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._tag_review_status_int

    @tag_review_status_int.setter
    def tag_review_status_int(self, tag_review_status_int: int):
        """Sets the tag_review_status_int of this VerboseFeatureDict.


        :param tag_review_status_int: The tag_review_status_int of this VerboseFeatureDict.
        :type tag_review_status_int: int
        """

        self._tag_review_status_int = tag_review_status_int

    @property
    def security_review_status(self) -> str:
        """Gets the security_review_status of this VerboseFeatureDict.


        :return: The security_review_status of this VerboseFeatureDict.
        :rtype: str
        """
        return self._security_review_status

    @security_review_status.setter
    def security_review_status(self, security_review_status: str):
        """Sets the security_review_status of this VerboseFeatureDict.


        :param security_review_status: The security_review_status of this VerboseFeatureDict.
        :type security_review_status: str
        """

        self._security_review_status = security_review_status

    @property
    def security_review_status_int(self) -> int:
        """Gets the security_review_status_int of this VerboseFeatureDict.


        :return: The security_review_status_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._security_review_status_int

    @security_review_status_int.setter
    def security_review_status_int(self, security_review_status_int: int):
        """Sets the security_review_status_int of this VerboseFeatureDict.


        :param security_review_status_int: The security_review_status_int of this VerboseFeatureDict.
        :type security_review_status_int: int
        """

        self._security_review_status_int = security_review_status_int

    @property
    def privacy_review_status(self) -> str:
        """Gets the privacy_review_status of this VerboseFeatureDict.


        :return: The privacy_review_status of this VerboseFeatureDict.
        :rtype: str
        """
        return self._privacy_review_status

    @privacy_review_status.setter
    def privacy_review_status(self, privacy_review_status: str):
        """Sets the privacy_review_status of this VerboseFeatureDict.


        :param privacy_review_status: The privacy_review_status of this VerboseFeatureDict.
        :type privacy_review_status: str
        """

        self._privacy_review_status = privacy_review_status

    @property
    def privacy_review_status_int(self) -> int:
        """Gets the privacy_review_status_int of this VerboseFeatureDict.


        :return: The privacy_review_status_int of this VerboseFeatureDict.
        :rtype: int
        """
        return self._privacy_review_status_int

    @privacy_review_status_int.setter
    def privacy_review_status_int(self, privacy_review_status_int: int):
        """Sets the privacy_review_status_int of this VerboseFeatureDict.


        :param privacy_review_status_int: The privacy_review_status_int of this VerboseFeatureDict.
        :type privacy_review_status_int: int
        """

        self._privacy_review_status_int = privacy_review_status_int

    @property
    def ergonomics_risks(self) -> str:
        """Gets the ergonomics_risks of this VerboseFeatureDict.


        :return: The ergonomics_risks of this VerboseFeatureDict.
        :rtype: str
        """
        return self._ergonomics_risks

    @ergonomics_risks.setter
    def ergonomics_risks(self, ergonomics_risks: str):
        """Sets the ergonomics_risks of this VerboseFeatureDict.


        :param ergonomics_risks: The ergonomics_risks of this VerboseFeatureDict.
        :type ergonomics_risks: str
        """

        self._ergonomics_risks = ergonomics_risks

    @property
    def wpt(self) -> bool:
        """Gets the wpt of this VerboseFeatureDict.


        :return: The wpt of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._wpt

    @wpt.setter
    def wpt(self, wpt: bool):
        """Sets the wpt of this VerboseFeatureDict.


        :param wpt: The wpt of this VerboseFeatureDict.
        :type wpt: bool
        """

        self._wpt = wpt

    @property
    def wpt_descr(self) -> str:
        """Gets the wpt_descr of this VerboseFeatureDict.


        :return: The wpt_descr of this VerboseFeatureDict.
        :rtype: str
        """
        return self._wpt_descr

    @wpt_descr.setter
    def wpt_descr(self, wpt_descr: str):
        """Sets the wpt_descr of this VerboseFeatureDict.


        :param wpt_descr: The wpt_descr of this VerboseFeatureDict.
        :type wpt_descr: str
        """

        self._wpt_descr = wpt_descr

    @property
    def webview_risks(self) -> str:
        """Gets the webview_risks of this VerboseFeatureDict.


        :return: The webview_risks of this VerboseFeatureDict.
        :rtype: str
        """
        return self._webview_risks

    @webview_risks.setter
    def webview_risks(self, webview_risks: str):
        """Sets the webview_risks of this VerboseFeatureDict.


        :param webview_risks: The webview_risks of this VerboseFeatureDict.
        :type webview_risks: str
        """

        self._webview_risks = webview_risks

    @property
    def devrel_emails(self) -> List[str]:
        """Gets the devrel_emails of this VerboseFeatureDict.


        :return: The devrel_emails of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._devrel_emails

    @devrel_emails.setter
    def devrel_emails(self, devrel_emails: List[str]):
        """Sets the devrel_emails of this VerboseFeatureDict.


        :param devrel_emails: The devrel_emails of this VerboseFeatureDict.
        :type devrel_emails: List[str]
        """

        self._devrel_emails = devrel_emails

    @property
    def debuggability(self) -> str:
        """Gets the debuggability of this VerboseFeatureDict.


        :return: The debuggability of this VerboseFeatureDict.
        :rtype: str
        """
        return self._debuggability

    @debuggability.setter
    def debuggability(self, debuggability: str):
        """Sets the debuggability of this VerboseFeatureDict.


        :param debuggability: The debuggability of this VerboseFeatureDict.
        :type debuggability: str
        """

        self._debuggability = debuggability

    @property
    def doc_links(self) -> List[str]:
        """Gets the doc_links of this VerboseFeatureDict.


        :return: The doc_links of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._doc_links

    @doc_links.setter
    def doc_links(self, doc_links: List[str]):
        """Sets the doc_links of this VerboseFeatureDict.


        :param doc_links: The doc_links of this VerboseFeatureDict.
        :type doc_links: List[str]
        """

        self._doc_links = doc_links

    @property
    def sample_links(self) -> List[str]:
        """Gets the sample_links of this VerboseFeatureDict.


        :return: The sample_links of this VerboseFeatureDict.
        :rtype: List[str]
        """
        return self._sample_links

    @sample_links.setter
    def sample_links(self, sample_links: List[str]):
        """Sets the sample_links of this VerboseFeatureDict.


        :param sample_links: The sample_links of this VerboseFeatureDict.
        :type sample_links: List[str]
        """

        self._sample_links = sample_links

    @property
    def stages(self) -> List[StageDict]:
        """Gets the stages of this VerboseFeatureDict.


        :return: The stages of this VerboseFeatureDict.
        :rtype: List[StageDict]
        """
        return self._stages

    @stages.setter
    def stages(self, stages: List[StageDict]):
        """Sets the stages of this VerboseFeatureDict.


        :param stages: The stages of this VerboseFeatureDict.
        :type stages: List[StageDict]
        """

        self._stages = stages

    @property
    def experiment_timeline(self) -> str:
        """Gets the experiment_timeline of this VerboseFeatureDict.


        :return: The experiment_timeline of this VerboseFeatureDict.
        :rtype: str
        """
        return self._experiment_timeline

    @experiment_timeline.setter
    def experiment_timeline(self, experiment_timeline: str):
        """Sets the experiment_timeline of this VerboseFeatureDict.


        :param experiment_timeline: The experiment_timeline of this VerboseFeatureDict.
        :type experiment_timeline: str
        """

        self._experiment_timeline = experiment_timeline

    @property
    def resources(self) -> FeatureDictInnerResourceInfo:
        """Gets the resources of this VerboseFeatureDict.


        :return: The resources of this VerboseFeatureDict.
        :rtype: FeatureDictInnerResourceInfo
        """
        return self._resources

    @resources.setter
    def resources(self, resources: FeatureDictInnerResourceInfo):
        """Sets the resources of this VerboseFeatureDict.


        :param resources: The resources of this VerboseFeatureDict.
        :type resources: FeatureDictInnerResourceInfo
        """

        self._resources = resources

    @property
    def comments(self) -> str:
        """Gets the comments of this VerboseFeatureDict.


        :return: The comments of this VerboseFeatureDict.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments: str):
        """Sets the comments of this VerboseFeatureDict.


        :param comments: The comments of this VerboseFeatureDict.
        :type comments: str
        """

        self._comments = comments

    @property
    def ff_views(self) -> int:
        """Gets the ff_views of this VerboseFeatureDict.


        :return: The ff_views of this VerboseFeatureDict.
        :rtype: int
        """
        return self._ff_views

    @ff_views.setter
    def ff_views(self, ff_views: int):
        """Sets the ff_views of this VerboseFeatureDict.


        :param ff_views: The ff_views of this VerboseFeatureDict.
        :type ff_views: int
        """

        self._ff_views = ff_views

    @property
    def safari_views(self) -> int:
        """Gets the safari_views of this VerboseFeatureDict.


        :return: The safari_views of this VerboseFeatureDict.
        :rtype: int
        """
        return self._safari_views

    @safari_views.setter
    def safari_views(self, safari_views: int):
        """Sets the safari_views of this VerboseFeatureDict.


        :param safari_views: The safari_views of this VerboseFeatureDict.
        :type safari_views: int
        """

        self._safari_views = safari_views

    @property
    def web_dev_views(self) -> int:
        """Gets the web_dev_views of this VerboseFeatureDict.


        :return: The web_dev_views of this VerboseFeatureDict.
        :rtype: int
        """
        return self._web_dev_views

    @web_dev_views.setter
    def web_dev_views(self, web_dev_views: int):
        """Sets the web_dev_views of this VerboseFeatureDict.


        :param web_dev_views: The web_dev_views of this VerboseFeatureDict.
        :type web_dev_views: int
        """

        self._web_dev_views = web_dev_views

    @property
    def browsers(self) -> FeatureBrowsersInfo:
        """Gets the browsers of this VerboseFeatureDict.


        :return: The browsers of this VerboseFeatureDict.
        :rtype: FeatureBrowsersInfo
        """
        return self._browsers

    @browsers.setter
    def browsers(self, browsers: FeatureBrowsersInfo):
        """Sets the browsers of this VerboseFeatureDict.


        :param browsers: The browsers of this VerboseFeatureDict.
        :type browsers: FeatureBrowsersInfo
        """

        self._browsers = browsers

    @property
    def standards(self) -> FeatureDictInnerStandardsInfo:
        """Gets the standards of this VerboseFeatureDict.


        :return: The standards of this VerboseFeatureDict.
        :rtype: FeatureDictInnerStandardsInfo
        """
        return self._standards

    @standards.setter
    def standards(self, standards: FeatureDictInnerStandardsInfo):
        """Sets the standards of this VerboseFeatureDict.


        :param standards: The standards of this VerboseFeatureDict.
        :type standards: FeatureDictInnerStandardsInfo
        """

        self._standards = standards

    @property
    def is_released(self) -> bool:
        """Gets the is_released of this VerboseFeatureDict.


        :return: The is_released of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._is_released

    @is_released.setter
    def is_released(self, is_released: bool):
        """Sets the is_released of this VerboseFeatureDict.


        :param is_released: The is_released of this VerboseFeatureDict.
        :type is_released: bool
        """

        self._is_released = is_released

    @property
    def is_enterprise_feature(self) -> bool:
        """Gets the is_enterprise_feature of this VerboseFeatureDict.


        :return: The is_enterprise_feature of this VerboseFeatureDict.
        :rtype: bool
        """
        return self._is_enterprise_feature

    @is_enterprise_feature.setter
    def is_enterprise_feature(self, is_enterprise_feature: bool):
        """Sets the is_enterprise_feature of this VerboseFeatureDict.


        :param is_enterprise_feature: The is_enterprise_feature of this VerboseFeatureDict.
        :type is_enterprise_feature: bool
        """

        self._is_enterprise_feature = is_enterprise_feature

    @property
    def updated_display(self) -> str:
        """Gets the updated_display of this VerboseFeatureDict.


        :return: The updated_display of this VerboseFeatureDict.
        :rtype: str
        """
        return self._updated_display

    @updated_display.setter
    def updated_display(self, updated_display: str):
        """Sets the updated_display of this VerboseFeatureDict.


        :param updated_display: The updated_display of this VerboseFeatureDict.
        :type updated_display: str
        """

        self._updated_display = updated_display

    @property
    def new_crbug_url(self) -> str:
        """Gets the new_crbug_url of this VerboseFeatureDict.


        :return: The new_crbug_url of this VerboseFeatureDict.
        :rtype: str
        """
        return self._new_crbug_url

    @new_crbug_url.setter
    def new_crbug_url(self, new_crbug_url: str):
        """Sets the new_crbug_url of this VerboseFeatureDict.


        :param new_crbug_url: The new_crbug_url of this VerboseFeatureDict.
        :type new_crbug_url: str
        """

        self._new_crbug_url = new_crbug_url
