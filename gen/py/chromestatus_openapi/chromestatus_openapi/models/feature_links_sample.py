from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi.models.link_preview_base import LinkPreviewBase
from chromestatus_openapi import util

from chromestatus_openapi.models.link_preview_base import LinkPreviewBase  # noqa: E501

class FeatureLinksSample(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all_of=None):  # noqa: E501
        """FeatureLinksSample - a model defined in OpenAPI

        :param all_of: The all_of of this FeatureLinksSample.  # noqa: E501
        :type all_of: LinkPreviewBase
        """
        self.openapi_types = {
            'all_of': LinkPreviewBase
        }

        self.attribute_map = {
            'all_of': 'allOf'
        }

        self._all_of = all_of

    @classmethod
    def from_dict(cls, dikt) -> 'FeatureLinksSample':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeatureLinksSample of this FeatureLinksSample.  # noqa: E501
        :rtype: FeatureLinksSample
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all_of(self) -> LinkPreviewBase:
        """Gets the all_of of this FeatureLinksSample.


        :return: The all_of of this FeatureLinksSample.
        :rtype: LinkPreviewBase
        """
        return self._all_of

    @all_of.setter
    def all_of(self, all_of: LinkPreviewBase):
        """Sets the all_of of this FeatureLinksSample.


        :param all_of: The all_of of this FeatureLinksSample.
        :type all_of: LinkPreviewBase
        """

        self._all_of = all_of
