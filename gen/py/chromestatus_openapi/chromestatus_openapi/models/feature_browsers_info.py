<<<<<<< HEAD
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi.models.feature_dict_inner_chrome_browser_info import FeatureDictInnerChromeBrowserInfo
from chromestatus_openapi.models.feature_dict_inner_single_browser_info import FeatureDictInnerSingleBrowserInfo
from chromestatus_openapi import util

from chromestatus_openapi.models.feature_dict_inner_chrome_browser_info import FeatureDictInnerChromeBrowserInfo  # noqa: E501
from chromestatus_openapi.models.feature_dict_inner_single_browser_info import FeatureDictInnerSingleBrowserInfo  # noqa: E501

class FeatureBrowsersInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chrome=None, ff=None, safari=None, webdev=None, other=None):  # noqa: E501
        """FeatureBrowsersInfo - a model defined in OpenAPI

        :param chrome: The chrome of this FeatureBrowsersInfo.  # noqa: E501
        :type chrome: FeatureDictInnerChromeBrowserInfo
        :param ff: The ff of this FeatureBrowsersInfo.  # noqa: E501
        :type ff: FeatureDictInnerSingleBrowserInfo
        :param safari: The safari of this FeatureBrowsersInfo.  # noqa: E501
        :type safari: FeatureDictInnerSingleBrowserInfo
        :param webdev: The webdev of this FeatureBrowsersInfo.  # noqa: E501
        :type webdev: FeatureDictInnerSingleBrowserInfo
        :param other: The other of this FeatureBrowsersInfo.  # noqa: E501
        :type other: FeatureDictInnerSingleBrowserInfo
        """
        self.openapi_types = {
            'chrome': FeatureDictInnerChromeBrowserInfo,
            'ff': FeatureDictInnerSingleBrowserInfo,
            'safari': FeatureDictInnerSingleBrowserInfo,
            'webdev': FeatureDictInnerSingleBrowserInfo,
            'other': FeatureDictInnerSingleBrowserInfo
        }

        self.attribute_map = {
            'chrome': 'chrome',
            'ff': 'ff',
            'safari': 'safari',
            'webdev': 'webdev',
            'other': 'other'
        }

        self._chrome = chrome
        self._ff = ff
        self._safari = safari
        self._webdev = webdev
        self._other = other

    @classmethod
    def from_dict(cls, dikt) -> 'FeatureBrowsersInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeatureBrowsersInfo of this FeatureBrowsersInfo.  # noqa: E501
        :rtype: FeatureBrowsersInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chrome(self) -> FeatureDictInnerChromeBrowserInfo:
        """Gets the chrome of this FeatureBrowsersInfo.


        :return: The chrome of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerChromeBrowserInfo
        """
        return self._chrome

    @chrome.setter
    def chrome(self, chrome: FeatureDictInnerChromeBrowserInfo):
        """Sets the chrome of this FeatureBrowsersInfo.


        :param chrome: The chrome of this FeatureBrowsersInfo.
        :type chrome: FeatureDictInnerChromeBrowserInfo
        """

        self._chrome = chrome

    @property
    def ff(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the ff of this FeatureBrowsersInfo.


        :return: The ff of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._ff

    @ff.setter
    def ff(self, ff: FeatureDictInnerSingleBrowserInfo):
        """Sets the ff of this FeatureBrowsersInfo.


        :param ff: The ff of this FeatureBrowsersInfo.
        :type ff: FeatureDictInnerSingleBrowserInfo
        """

        self._ff = ff

    @property
    def safari(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the safari of this FeatureBrowsersInfo.


        :return: The safari of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._safari

    @safari.setter
    def safari(self, safari: FeatureDictInnerSingleBrowserInfo):
        """Sets the safari of this FeatureBrowsersInfo.


        :param safari: The safari of this FeatureBrowsersInfo.
        :type safari: FeatureDictInnerSingleBrowserInfo
        """

        self._safari = safari

    @property
    def webdev(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the webdev of this FeatureBrowsersInfo.


        :return: The webdev of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._webdev

    @webdev.setter
    def webdev(self, webdev: FeatureDictInnerSingleBrowserInfo):
        """Sets the webdev of this FeatureBrowsersInfo.


        :param webdev: The webdev of this FeatureBrowsersInfo.
        :type webdev: FeatureDictInnerSingleBrowserInfo
        """

        self._webdev = webdev

    @property
    def other(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the other of this FeatureBrowsersInfo.


        :return: The other of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._other

    @other.setter
    def other(self, other: FeatureDictInnerSingleBrowserInfo):
        """Sets the other of this FeatureBrowsersInfo.


        :param other: The other of this FeatureBrowsersInfo.
        :type other: FeatureDictInnerSingleBrowserInfo
        """

        self._other = other
||||||| 76d0ce7e
=======
# coding: utf-8

"""
    chomestatus API

    The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict
from typing import Any, ClassVar, Dict, List, Optional
from chromestatus_openapi.models.feature_dict_inner_chrome_browser_info import FeatureDictInnerChromeBrowserInfo
from chromestatus_openapi.models.feature_dict_inner_single_browser_info import FeatureDictInnerSingleBrowserInfo
from typing import Optional, Set
from typing_extensions import Self

class FeatureBrowsersInfo(BaseModel):
    """
    FeatureBrowsersInfo
    """ # noqa: E501
    chrome: Optional[FeatureDictInnerChromeBrowserInfo] = None
    ff: Optional[FeatureDictInnerSingleBrowserInfo] = None
    safari: Optional[FeatureDictInnerSingleBrowserInfo] = None
    webdev: Optional[FeatureDictInnerSingleBrowserInfo] = None
    other: Optional[FeatureDictInnerSingleBrowserInfo] = None
    __properties: ClassVar[List[str]] = ["chrome", "ff", "safari", "webdev", "other"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of FeatureBrowsersInfo from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of chrome
        if self.chrome:
            _dict['chrome'] = self.chrome.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ff
        if self.ff:
            _dict['ff'] = self.ff.to_dict()
        # override the default output from pydantic by calling `to_dict()` of safari
        if self.safari:
            _dict['safari'] = self.safari.to_dict()
        # override the default output from pydantic by calling `to_dict()` of webdev
        if self.webdev:
            _dict['webdev'] = self.webdev.to_dict()
        # override the default output from pydantic by calling `to_dict()` of other
        if self.other:
            _dict['other'] = self.other.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of FeatureBrowsersInfo from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "chrome": FeatureDictInnerChromeBrowserInfo.from_dict(obj["chrome"]) if obj.get("chrome") is not None else None,
            "ff": FeatureDictInnerSingleBrowserInfo.from_dict(obj["ff"]) if obj.get("ff") is not None else None,
            "safari": FeatureDictInnerSingleBrowserInfo.from_dict(obj["safari"]) if obj.get("safari") is not None else None,
            "webdev": FeatureDictInnerSingleBrowserInfo.from_dict(obj["webdev"]) if obj.get("webdev") is not None else None,
            "other": FeatureDictInnerSingleBrowserInfo.from_dict(obj["other"]) if obj.get("other") is not None else None
        })
        return _obj


>>>>>>> 9fcb27fe87d90d342617429deb845522889ce21d
