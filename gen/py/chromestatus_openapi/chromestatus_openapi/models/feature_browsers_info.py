from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi.models.feature_dict_inner_chrome_browser_info import FeatureDictInnerChromeBrowserInfo
from chromestatus_openapi.models.feature_dict_inner_single_browser_info import FeatureDictInnerSingleBrowserInfo
from chromestatus_openapi import util

from chromestatus_openapi.models.feature_dict_inner_chrome_browser_info import FeatureDictInnerChromeBrowserInfo  # noqa: E501
from chromestatus_openapi.models.feature_dict_inner_single_browser_info import FeatureDictInnerSingleBrowserInfo  # noqa: E501

class FeatureBrowsersInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chrome=None, ff=None, safari=None, webdev=None, other=None):  # noqa: E501
        """FeatureBrowsersInfo - a model defined in OpenAPI

        :param chrome: The chrome of this FeatureBrowsersInfo.  # noqa: E501
        :type chrome: FeatureDictInnerChromeBrowserInfo
        :param ff: The ff of this FeatureBrowsersInfo.  # noqa: E501
        :type ff: FeatureDictInnerSingleBrowserInfo
        :param safari: The safari of this FeatureBrowsersInfo.  # noqa: E501
        :type safari: FeatureDictInnerSingleBrowserInfo
        :param webdev: The webdev of this FeatureBrowsersInfo.  # noqa: E501
        :type webdev: FeatureDictInnerSingleBrowserInfo
        :param other: The other of this FeatureBrowsersInfo.  # noqa: E501
        :type other: FeatureDictInnerSingleBrowserInfo
        """
        self.openapi_types = {
            'chrome': FeatureDictInnerChromeBrowserInfo,
            'ff': FeatureDictInnerSingleBrowserInfo,
            'safari': FeatureDictInnerSingleBrowserInfo,
            'webdev': FeatureDictInnerSingleBrowserInfo,
            'other': FeatureDictInnerSingleBrowserInfo
        }

        self.attribute_map = {
            'chrome': 'chrome',
            'ff': 'ff',
            'safari': 'safari',
            'webdev': 'webdev',
            'other': 'other'
        }

        self._chrome = chrome
        self._ff = ff
        self._safari = safari
        self._webdev = webdev
        self._other = other

    @classmethod
    def from_dict(cls, dikt) -> 'FeatureBrowsersInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeatureBrowsersInfo of this FeatureBrowsersInfo.  # noqa: E501
        :rtype: FeatureBrowsersInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chrome(self) -> FeatureDictInnerChromeBrowserInfo:
        """Gets the chrome of this FeatureBrowsersInfo.


        :return: The chrome of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerChromeBrowserInfo
        """
        return self._chrome

    @chrome.setter
    def chrome(self, chrome: FeatureDictInnerChromeBrowserInfo):
        """Sets the chrome of this FeatureBrowsersInfo.


        :param chrome: The chrome of this FeatureBrowsersInfo.
        :type chrome: FeatureDictInnerChromeBrowserInfo
        """

        self._chrome = chrome

    @property
    def ff(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the ff of this FeatureBrowsersInfo.


        :return: The ff of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._ff

    @ff.setter
    def ff(self, ff: FeatureDictInnerSingleBrowserInfo):
        """Sets the ff of this FeatureBrowsersInfo.


        :param ff: The ff of this FeatureBrowsersInfo.
        :type ff: FeatureDictInnerSingleBrowserInfo
        """

        self._ff = ff

    @property
    def safari(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the safari of this FeatureBrowsersInfo.


        :return: The safari of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._safari

    @safari.setter
    def safari(self, safari: FeatureDictInnerSingleBrowserInfo):
        """Sets the safari of this FeatureBrowsersInfo.


        :param safari: The safari of this FeatureBrowsersInfo.
        :type safari: FeatureDictInnerSingleBrowserInfo
        """

        self._safari = safari

    @property
    def webdev(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the webdev of this FeatureBrowsersInfo.


        :return: The webdev of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._webdev

    @webdev.setter
    def webdev(self, webdev: FeatureDictInnerSingleBrowserInfo):
        """Sets the webdev of this FeatureBrowsersInfo.


        :param webdev: The webdev of this FeatureBrowsersInfo.
        :type webdev: FeatureDictInnerSingleBrowserInfo
        """

        self._webdev = webdev

    @property
    def other(self) -> FeatureDictInnerSingleBrowserInfo:
        """Gets the other of this FeatureBrowsersInfo.


        :return: The other of this FeatureBrowsersInfo.
        :rtype: FeatureDictInnerSingleBrowserInfo
        """
        return self._other

    @other.setter
    def other(self, other: FeatureDictInnerSingleBrowserInfo):
        """Sets the other of this FeatureBrowsersInfo.


        :param other: The other of this FeatureBrowsersInfo.
        :type other: FeatureDictInnerSingleBrowserInfo
        """

        self._other = other
