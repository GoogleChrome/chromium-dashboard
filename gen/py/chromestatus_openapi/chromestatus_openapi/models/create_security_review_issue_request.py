from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class CreateSecurityReviewIssueRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_id=None, gate_id=None, continuity_id=None):  # noqa: E501
        """CreateSecurityReviewIssueRequest - a model defined in OpenAPI

        :param feature_id: The feature_id of this CreateSecurityReviewIssueRequest.  # noqa: E501
        :type feature_id: int
        :param gate_id: The gate_id of this CreateSecurityReviewIssueRequest.  # noqa: E501
        :type gate_id: int
        :param continuity_id: The continuity_id of this CreateSecurityReviewIssueRequest.  # noqa: E501
        :type continuity_id: int
        """
        self.openapi_types = {
            'feature_id': int,
            'gate_id': int,
            'continuity_id': int
        }

        self.attribute_map = {
            'feature_id': 'feature_id',
            'gate_id': 'gate_id',
            'continuity_id': 'continuity_id'
        }

        self._feature_id = feature_id
        self._gate_id = gate_id
        self._continuity_id = continuity_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateSecurityReviewIssueRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateSecurityReviewIssueRequest of this CreateSecurityReviewIssueRequest.  # noqa: E501
        :rtype: CreateSecurityReviewIssueRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_id(self) -> int:
        """Gets the feature_id of this CreateSecurityReviewIssueRequest.


        :return: The feature_id of this CreateSecurityReviewIssueRequest.
        :rtype: int
        """
        return self._feature_id

    @feature_id.setter
    def feature_id(self, feature_id: int):
        """Sets the feature_id of this CreateSecurityReviewIssueRequest.


        :param feature_id: The feature_id of this CreateSecurityReviewIssueRequest.
        :type feature_id: int
        """
        if feature_id is None:
            raise ValueError("Invalid value for `feature_id`, must not be `None`")  # noqa: E501

        self._feature_id = feature_id

    @property
    def gate_id(self) -> int:
        """Gets the gate_id of this CreateSecurityReviewIssueRequest.


        :return: The gate_id of this CreateSecurityReviewIssueRequest.
        :rtype: int
        """
        return self._gate_id

    @gate_id.setter
    def gate_id(self, gate_id: int):
        """Sets the gate_id of this CreateSecurityReviewIssueRequest.


        :param gate_id: The gate_id of this CreateSecurityReviewIssueRequest.
        :type gate_id: int
        """
        if gate_id is None:
            raise ValueError("Invalid value for `gate_id`, must not be `None`")  # noqa: E501

        self._gate_id = gate_id

    @property
    def continuity_id(self) -> int:
        """Gets the continuity_id of this CreateSecurityReviewIssueRequest.


        :return: The continuity_id of this CreateSecurityReviewIssueRequest.
        :rtype: int
        """
        return self._continuity_id

    @continuity_id.setter
    def continuity_id(self, continuity_id: int):
        """Sets the continuity_id of this CreateSecurityReviewIssueRequest.


        :param continuity_id: The continuity_id of this CreateSecurityReviewIssueRequest.
        :type continuity_id: int
        """
        if continuity_id is None:
            raise ValueError("Invalid value for `continuity_id`, must not be `None`")  # noqa: E501

        self._continuity_id = continuity_id
