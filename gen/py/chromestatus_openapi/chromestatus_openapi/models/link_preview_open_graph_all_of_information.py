from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model import Model
from chromestatus_openapi import util


class LinkPreviewOpenGraphAllOfInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, description=None):  # noqa: E501
        """LinkPreviewOpenGraphAllOfInformation - a model defined in OpenAPI

        :param title: The title of this LinkPreviewOpenGraphAllOfInformation.  # noqa: E501
        :type title: str
        :param description: The description of this LinkPreviewOpenGraphAllOfInformation.  # noqa: E501
        :type description: str
        """
        self.openapi_types = {
            'title': str,
            'description': str
        }

        self.attribute_map = {
            'title': 'title',
            'description': 'description'
        }

        self._title = title
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'LinkPreviewOpenGraphAllOfInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LinkPreviewOpenGraph_allOf_information of this LinkPreviewOpenGraphAllOfInformation.  # noqa: E501
        :rtype: LinkPreviewOpenGraphAllOfInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this LinkPreviewOpenGraphAllOfInformation.


        :return: The title of this LinkPreviewOpenGraphAllOfInformation.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this LinkPreviewOpenGraphAllOfInformation.


        :param title: The title of this LinkPreviewOpenGraphAllOfInformation.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this LinkPreviewOpenGraphAllOfInformation.


        :return: The description of this LinkPreviewOpenGraphAllOfInformation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this LinkPreviewOpenGraphAllOfInformation.


        :param description: The description of this LinkPreviewOpenGraphAllOfInformation.
        :type description: str
        """

        self._description = description
