/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BooleanFieldInfoValue
 */
export interface BooleanFieldInfoValue {
    /**
     * 
     * @type {string}
     * @memberof BooleanFieldInfoValue
     */
    form_field_name?: string;
    /**
     * 
     * @type {string}
     * @memberof BooleanFieldInfoValue
     */
    value_type?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BooleanFieldInfoValue
     */
    value?: boolean;
}

/**
 * Check if a given object implements the BooleanFieldInfoValue interface.
 */
export function instanceOfBooleanFieldInfoValue(value: object): value is BooleanFieldInfoValue {
    return true;
}

export function BooleanFieldInfoValueFromJSON(json: any): BooleanFieldInfoValue {
    return BooleanFieldInfoValueFromJSONTyped(json, false);
}

export function BooleanFieldInfoValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): BooleanFieldInfoValue {
    if (json == null) {
        return json;
    }
    return {
        
        'form_field_name': json['form_field_name'] == null ? undefined : json['form_field_name'],
        'value_type': json['value_type'] == null ? undefined : json['value_type'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function BooleanFieldInfoValueToJSON(value?: BooleanFieldInfoValue | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'form_field_name': value['form_field_name'],
        'value_type': value['value_type'],
        'value': value['value'],
    };
}

