/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VerboseFeatureDict } from './VerboseFeatureDict';
import {
    VerboseFeatureDictFromJSON,
    VerboseFeatureDictFromJSONTyped,
    VerboseFeatureDictToJSON,
} from './VerboseFeatureDict';

/**
 * 
 * @export
 * @interface FeatureSearchResponse
 */
export interface FeatureSearchResponse {
    /**
     * 
     * @type {number}
     * @memberof FeatureSearchResponse
     */
    total_count?: number;
    /**
     * 
     * @type {Array<VerboseFeatureDict>}
     * @memberof FeatureSearchResponse
     */
    features?: Array<VerboseFeatureDict>;
}

/**
 * Check if a given object implements the FeatureSearchResponse interface.
 */
export function instanceOfFeatureSearchResponse(value: object): value is FeatureSearchResponse {
    return true;
}

export function FeatureSearchResponseFromJSON(json: any): FeatureSearchResponse {
    return FeatureSearchResponseFromJSONTyped(json, false);
}

export function FeatureSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureSearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'total_count': json['total_count'] == null ? undefined : json['total_count'],
        'features': json['features'] == null ? undefined : ((json['features'] as Array<any>).map(VerboseFeatureDictFromJSON)),
    };
}

export function FeatureSearchResponseToJSON(value?: FeatureSearchResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'total_count': value['total_count'],
        'features': value['features'] == null ? undefined : ((value['features'] as Array<any>).map(VerboseFeatureDictToJSON)),
    };
}

