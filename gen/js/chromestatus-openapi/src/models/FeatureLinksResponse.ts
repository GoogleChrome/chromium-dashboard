/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkPreview } from './LinkPreview';
import {
    LinkPreviewFromJSON,
    LinkPreviewFromJSONTyped,
    LinkPreviewToJSON,
} from './LinkPreview';

/**
 * 
 * @export
 * @interface FeatureLinksResponse
 */
export interface FeatureLinksResponse {
    /**
     * 
     * @type {Array<LinkPreview>}
     * @memberof FeatureLinksResponse
     */
    data?: Array<LinkPreview>;
    /**
     * 
     * @type {boolean}
     * @memberof FeatureLinksResponse
     */
    has_stale_links?: boolean;
}

/**
 * Check if a given object implements the FeatureLinksResponse interface.
 */
export function instanceOfFeatureLinksResponse(value: object): value is FeatureLinksResponse {
    return true;
}

export function FeatureLinksResponseFromJSON(json: any): FeatureLinksResponse {
    return FeatureLinksResponseFromJSONTyped(json, false);
}

export function FeatureLinksResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureLinksResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(LinkPreviewFromJSON)),
        'has_stale_links': json['has_stale_links'] == null ? undefined : json['has_stale_links'],
    };
}

export function FeatureLinksResponseToJSON(value?: FeatureLinksResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(LinkPreviewToJSON)),
        'has_stale_links': value['has_stale_links'],
    };
}

