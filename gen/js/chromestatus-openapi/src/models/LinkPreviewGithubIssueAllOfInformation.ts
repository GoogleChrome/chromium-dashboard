/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LinkPreviewGithubIssueAllOfInformation
 */
export interface LinkPreviewGithubIssueAllOfInformation {
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    number?: number;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    user_login?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    state?: LinkPreviewGithubIssueAllOfInformationStateEnum;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    state_reason?: LinkPreviewGithubIssueAllOfInformationStateReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    assignee_login?: string;
    /**
     * 
     * @type {Date}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    created_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    updated_at?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    closed_at?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof LinkPreviewGithubIssueAllOfInformation
     */
    labels?: Array<string>;
}


/**
 * @export
 */
export const LinkPreviewGithubIssueAllOfInformationStateEnum = {
    open: 'open',
    closed: 'closed'
} as const;
export type LinkPreviewGithubIssueAllOfInformationStateEnum = typeof LinkPreviewGithubIssueAllOfInformationStateEnum[keyof typeof LinkPreviewGithubIssueAllOfInformationStateEnum];

/**
 * @export
 */
export const LinkPreviewGithubIssueAllOfInformationStateReasonEnum = {
    completed: 'completed',
    reopened: 'reopened',
    not_planned: 'not_planned'
} as const;
export type LinkPreviewGithubIssueAllOfInformationStateReasonEnum = typeof LinkPreviewGithubIssueAllOfInformationStateReasonEnum[keyof typeof LinkPreviewGithubIssueAllOfInformationStateReasonEnum];


/**
 * Check if a given object implements the LinkPreviewGithubIssueAllOfInformation interface.
 */
export function instanceOfLinkPreviewGithubIssueAllOfInformation(value: object): value is LinkPreviewGithubIssueAllOfInformation {
    return true;
}

export function LinkPreviewGithubIssueAllOfInformationFromJSON(json: any): LinkPreviewGithubIssueAllOfInformation {
    return LinkPreviewGithubIssueAllOfInformationFromJSONTyped(json, false);
}

export function LinkPreviewGithubIssueAllOfInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkPreviewGithubIssueAllOfInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'] == null ? undefined : json['url'],
        'number': json['number'] == null ? undefined : json['number'],
        'title': json['title'] == null ? undefined : json['title'],
        'user_login': json['user_login'] == null ? undefined : json['user_login'],
        'state': json['state'] == null ? undefined : json['state'],
        'state_reason': json['state_reason'] == null ? undefined : json['state_reason'],
        'assignee_login': json['assignee_login'] == null ? undefined : json['assignee_login'],
        'created_at': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updated_at': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'closed_at': json['closed_at'] == null ? undefined : (new Date(json['closed_at'])),
        'labels': json['labels'] == null ? undefined : json['labels'],
    };
}

export function LinkPreviewGithubIssueAllOfInformationToJSON(value?: LinkPreviewGithubIssueAllOfInformation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'url': value['url'],
        'number': value['number'],
        'title': value['title'],
        'user_login': value['user_login'],
        'state': value['state'],
        'state_reason': value['state_reason'],
        'assignee_login': value['assignee_login'],
        'created_at': value['created_at'] == null ? undefined : ((value['created_at']).toISOString().substring(0,10)),
        'updated_at': value['updated_at'] == null ? undefined : ((value['updated_at']).toISOString().substring(0,10)),
        'closed_at': value['closed_at'] == null ? undefined : ((value['closed_at']).toISOString().substring(0,10)),
        'labels': value['labels'],
    };
}

