/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ComponentsUsersComponentsInner } from './ComponentsUsersComponentsInner';
import {
    ComponentsUsersComponentsInnerFromJSON,
    ComponentsUsersComponentsInnerFromJSONTyped,
    ComponentsUsersComponentsInnerToJSON,
} from './ComponentsUsersComponentsInner';
import type { ComponentsUsersUsersInner } from './ComponentsUsersUsersInner';
import {
    ComponentsUsersUsersInnerFromJSON,
    ComponentsUsersUsersInnerFromJSONTyped,
    ComponentsUsersUsersInnerToJSON,
} from './ComponentsUsersUsersInner';

/**
 * 
 * @export
 * @interface ComponentsUsers
 */
export interface ComponentsUsers {
    /**
     * 
     * @type {Array<ComponentsUsersUsersInner>}
     * @memberof ComponentsUsers
     */
    users?: Array<ComponentsUsersUsersInner>;
    /**
     * 
     * @type {Array<ComponentsUsersComponentsInner>}
     * @memberof ComponentsUsers
     */
    components?: Array<ComponentsUsersComponentsInner>;
}

/**
 * Check if a given object implements the ComponentsUsers interface.
 */
export function instanceOfComponentsUsers(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComponentsUsersFromJSON(json: any): ComponentsUsers {
    return ComponentsUsersFromJSONTyped(json, false);
}

export function ComponentsUsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentsUsers {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'users': !exists(json, 'users') ? undefined : ((json['users'] as Array<any>).map(ComponentsUsersUsersInnerFromJSON)),
        'components': !exists(json, 'components') ? undefined : ((json['components'] as Array<any>).map(ComponentsUsersComponentsInnerFromJSON)),
    };
}

export function ComponentsUsersToJSON(value?: ComponentsUsers | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'users': value.users === undefined ? undefined : ((value.users as Array<any>).map(ComponentsUsersUsersInnerToJSON)),
        'components': value.components === undefined ? undefined : ((value.components as Array<any>).map(ComponentsUsersComponentsInnerToJSON)),
    };
}

