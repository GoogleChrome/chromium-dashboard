/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureLatency
 */
export interface FeatureLatency {
    /**
     * 
     * @type {string}
     * @memberof FeatureLatency
     */
    feature_name?: string;
    /**
     * 
     * @type {number}
     * @memberof FeatureLatency
     */
    feature_id: number;
    /**
     * 
     * @type {Date}
     * @memberof FeatureLatency
     */
    entry_created_date: Date;
    /**
     * 
     * @type {number}
     * @memberof FeatureLatency
     */
    shipped_milestone: number;
    /**
     * 
     * @type {Date}
     * @memberof FeatureLatency
     */
    shipped_date: Date;
    /**
     * 
     * @type {string}
     * @memberof FeatureLatency
     */
    owner_email: string;
}

/**
 * Check if a given object implements the FeatureLatency interface.
 */
export function instanceOfFeatureLatency(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "feature_id" in value;
    isInstance = isInstance && "entry_created_date" in value;
    isInstance = isInstance && "shipped_milestone" in value;
    isInstance = isInstance && "shipped_date" in value;
    isInstance = isInstance && "owner_email" in value;

    return isInstance;
}

export function FeatureLatencyFromJSON(json: any): FeatureLatency {
    return FeatureLatencyFromJSONTyped(json, false);
}

export function FeatureLatencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureLatency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'feature_name': !exists(json, 'feature_name') ? undefined : json['feature_name'],
        'feature_id': json['feature_id'],
        'entry_created_date': (new Date(json['entry_created_date'])),
        'shipped_milestone': json['shipped_milestone'],
        'shipped_date': (new Date(json['shipped_date'])),
        'owner_email': json['owner_email'],
    };
}

export function FeatureLatencyToJSON(value?: FeatureLatency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'feature_name': value.feature_name,
        'feature_id': value.feature_id,
        'entry_created_date': (value.entry_created_date.toISOString().substring(0,10)),
        'shipped_milestone': value.shipped_milestone,
        'shipped_date': (value.shipped_date.toISOString().substring(0,10)),
        'owner_email': value.owner_email,
    };
}

