/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComponentsUser
 */
export interface ComponentsUser {
    /**
     * 
     * @type {number}
     * @memberof ComponentsUser
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ComponentsUser
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ComponentsUser
     */
    email: string;
}

/**
 * Check if a given object implements the ComponentsUser interface.
 */
export function instanceOfComponentsUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function ComponentsUserFromJSON(json: any): ComponentsUser {
    return ComponentsUserFromJSONTyped(json, false);
}

export function ComponentsUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentsUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'email': json['email'],
    };
}

export function ComponentsUserToJSON(value?: ComponentsUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
    };
}

