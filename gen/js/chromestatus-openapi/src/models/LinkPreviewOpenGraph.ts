/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LinkPreview } from './LinkPreview';
import {
    LinkPreviewFromJSON,
    LinkPreviewFromJSONTyped,
    LinkPreviewToJSON,
} from './LinkPreview';
import type { LinkPreviewOpenGraphAllOfInformation } from './LinkPreviewOpenGraphAllOfInformation';
import {
    LinkPreviewOpenGraphAllOfInformationFromJSON,
    LinkPreviewOpenGraphAllOfInformationFromJSONTyped,
    LinkPreviewOpenGraphAllOfInformationToJSON,
} from './LinkPreviewOpenGraphAllOfInformation';

/**
 * 
 * @export
 * @interface LinkPreviewOpenGraph
 */
export interface LinkPreviewOpenGraph extends LinkPreview {
    /**
     * 
     * @type {LinkPreviewOpenGraphAllOfInformation}
     * @memberof LinkPreviewOpenGraph
     */
    information: LinkPreviewOpenGraphAllOfInformation;
}

/**
 * Check if a given object implements the LinkPreviewOpenGraph interface.
 */
export function instanceOfLinkPreviewOpenGraph(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "information" in value;

    return isInstance;
}

export function LinkPreviewOpenGraphFromJSON(json: any): LinkPreviewOpenGraph {
    return LinkPreviewOpenGraphFromJSONTyped(json, false);
}

export function LinkPreviewOpenGraphFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkPreviewOpenGraph {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...LinkPreviewFromJSONTyped(json, ignoreDiscriminator),
        'information': LinkPreviewOpenGraphAllOfInformationFromJSON(json['information']),
    };
}

export function LinkPreviewOpenGraphToJSON(value?: LinkPreviewOpenGraph | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...LinkPreviewToJSON(value),
        'information': LinkPreviewOpenGraphAllOfInformationToJSON(value.information),
    };
}

