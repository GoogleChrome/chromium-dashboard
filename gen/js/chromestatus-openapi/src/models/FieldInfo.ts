/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * One of the value fields should be used based on the type of data.
 * @export
 * @interface FieldInfo
 */
export interface FieldInfo {
    /**
     * 
     * @type {string}
     * @memberof FieldInfo
     */
    form_field_name?: string;
    /**
     * 
     * @type {string}
     * @memberof FieldInfo
     */
    string_value?: string;
    /**
     * 
     * @type {number}
     * @memberof FieldInfo
     */
    integer_value?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FieldInfo
     */
    boolean_value?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof FieldInfo
     */
    array_value?: Array<string>;
}

/**
 * Check if a given object implements the FieldInfo interface.
 */
export function instanceOfFieldInfo(value: object): value is FieldInfo {
    return true;
}

export function FieldInfoFromJSON(json: any): FieldInfo {
    return FieldInfoFromJSONTyped(json, false);
}

export function FieldInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'form_field_name': json['form_field_name'] == null ? undefined : json['form_field_name'],
        'string_value': json['string_value'] == null ? undefined : json['string_value'],
        'integer_value': json['integer_value'] == null ? undefined : json['integer_value'],
        'boolean_value': json['boolean_value'] == null ? undefined : json['boolean_value'],
        'array_value': json['array_value'] == null ? undefined : json['array_value'],
    };
}

export function FieldInfoToJSON(value?: FieldInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'form_field_name': value['form_field_name'],
        'string_value': value['string_value'],
        'integer_value': value['integer_value'],
        'boolean_value': value['boolean_value'],
        'array_value': value['array_value'],
    };
}

