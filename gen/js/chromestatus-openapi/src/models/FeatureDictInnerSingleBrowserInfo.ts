/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureDictInnerViewInfo } from './FeatureDictInnerViewInfo';
import {
    FeatureDictInnerViewInfoFromJSON,
    FeatureDictInnerViewInfoFromJSONTyped,
    FeatureDictInnerViewInfoToJSON,
} from './FeatureDictInnerViewInfo';

/**
 * 
 * @export
 * @interface FeatureDictInnerSingleBrowserInfo
 */
export interface FeatureDictInnerSingleBrowserInfo {
    /**
     * 
     * @type {FeatureDictInnerViewInfo}
     * @memberof FeatureDictInnerSingleBrowserInfo
     */
    view?: FeatureDictInnerViewInfo;
}

/**
 * Check if a given object implements the FeatureDictInnerSingleBrowserInfo interface.
 */
export function instanceOfFeatureDictInnerSingleBrowserInfo(value: object): value is FeatureDictInnerSingleBrowserInfo {
    return true;
}

export function FeatureDictInnerSingleBrowserInfoFromJSON(json: any): FeatureDictInnerSingleBrowserInfo {
    return FeatureDictInnerSingleBrowserInfoFromJSONTyped(json, false);
}

export function FeatureDictInnerSingleBrowserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureDictInnerSingleBrowserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'view': json['view'] == null ? undefined : FeatureDictInnerViewInfoFromJSON(json['view']),
    };
}

export function FeatureDictInnerSingleBrowserInfoToJSON(value?: FeatureDictInnerSingleBrowserInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'view': FeatureDictInnerViewInfoToJSON(value['view']),
    };
}

