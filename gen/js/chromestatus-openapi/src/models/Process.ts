/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProcessStage } from './ProcessStage';
import {
    ProcessStageFromJSON,
    ProcessStageFromJSONTyped,
    ProcessStageToJSON,
} from './ProcessStage';

/**
 * 
 * @export
 * @interface Process
 */
export interface Process {
    /**
     * 
     * @type {string}
     * @memberof Process
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Process
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Process
     */
    applicability?: string;
    /**
     * 
     * @type {Array<ProcessStage>}
     * @memberof Process
     */
    stages?: Array<ProcessStage>;
}

/**
 * Check if a given object implements the Process interface.
 */
export function instanceOfProcess(value: object): value is Process {
    return true;
}

export function ProcessFromJSON(json: any): Process {
    return ProcessFromJSONTyped(json, false);
}

export function ProcessFromJSONTyped(json: any, ignoreDiscriminator: boolean): Process {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'applicability': json['applicability'] == null ? undefined : json['applicability'],
        'stages': json['stages'] == null ? undefined : ((json['stages'] as Array<any>).map(ProcessStageFromJSON)),
    };
}

export function ProcessToJSON(value?: Process | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'applicability': value['applicability'],
        'stages': value['stages'] == null ? undefined : ((value['stages'] as Array<any>).map(ProcessStageToJSON)),
    };
}

