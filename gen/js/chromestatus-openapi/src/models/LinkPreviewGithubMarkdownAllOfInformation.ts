/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LinkPreviewGithubMarkdownAllOfInformation
 */
export interface LinkPreviewGithubMarkdownAllOfInformation {
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubMarkdownAllOfInformation
     */
    _parsed_title?: string;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubMarkdownAllOfInformation
     */
    content?: string;
}

/**
 * Check if a given object implements the LinkPreviewGithubMarkdownAllOfInformation interface.
 */
export function instanceOfLinkPreviewGithubMarkdownAllOfInformation(value: object): value is LinkPreviewGithubMarkdownAllOfInformation {
    return true;
}

export function LinkPreviewGithubMarkdownAllOfInformationFromJSON(json: any): LinkPreviewGithubMarkdownAllOfInformation {
    return LinkPreviewGithubMarkdownAllOfInformationFromJSONTyped(json, false);
}

export function LinkPreviewGithubMarkdownAllOfInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkPreviewGithubMarkdownAllOfInformation {
    if (json == null) {
        return json;
    }
    return {
        
        '_parsed_title': json['_parsed_title'] == null ? undefined : json['_parsed_title'],
        'content': json['content'] == null ? undefined : json['content'],
    };
}

export function LinkPreviewGithubMarkdownAllOfInformationToJSON(value?: LinkPreviewGithubMarkdownAllOfInformation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        '_parsed_title': value['_parsed_title'],
        'content': value['content'],
    };
}

