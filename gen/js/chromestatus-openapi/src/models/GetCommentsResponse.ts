/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Activity } from './Activity';
import {
    ActivityFromJSON,
    ActivityFromJSONTyped,
    ActivityToJSON,
} from './Activity';

/**
 * 
 * @export
 * @interface GetCommentsResponse
 */
export interface GetCommentsResponse {
    /**
     * 
     * @type {Array<Activity>}
     * @memberof GetCommentsResponse
     */
    comments?: Array<Activity>;
}

/**
 * Check if a given object implements the GetCommentsResponse interface.
 */
export function instanceOfGetCommentsResponse(value: object): value is GetCommentsResponse {
    return true;
}

export function GetCommentsResponseFromJSON(json: any): GetCommentsResponse {
    return GetCommentsResponseFromJSONTyped(json, false);
}

export function GetCommentsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCommentsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'comments': json['comments'] == null ? undefined : ((json['comments'] as Array<any>).map(ActivityFromJSON)),
    };
}

export function GetCommentsResponseToJSON(value?: GetCommentsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'comments': value['comments'] == null ? undefined : ((value['comments'] as Array<any>).map(ActivityToJSON)),
    };
}

