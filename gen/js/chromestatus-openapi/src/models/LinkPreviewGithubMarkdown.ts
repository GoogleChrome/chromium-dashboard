/* tslint:disable */
/* eslint-disable */
/**
 * chomestatus API
 * The API for chromestatus.com. chromestatus.com is the official tool used for tracking feature launches in Blink (the browser engine that powers Chrome and many other web browsers). This tool guides feature owners through our launch process and serves as a primary source for developer information that then ripples throughout the web developer ecosystem. More details at: https://github.com/GoogleChrome/chromium-dashboard
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkPreviewGithubMarkdownAllOfInformation } from './LinkPreviewGithubMarkdownAllOfInformation';
import {
    LinkPreviewGithubMarkdownAllOfInformationFromJSON,
    LinkPreviewGithubMarkdownAllOfInformationFromJSONTyped,
    LinkPreviewGithubMarkdownAllOfInformationToJSON,
} from './LinkPreviewGithubMarkdownAllOfInformation';

/**
 * 
 * @export
 * @interface LinkPreviewGithubMarkdown
 */
export interface LinkPreviewGithubMarkdown {
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubMarkdown
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof LinkPreviewGithubMarkdown
     */
    type: string;
    /**
     * 
     * @type {LinkPreviewGithubMarkdownAllOfInformation}
     * @memberof LinkPreviewGithubMarkdown
     */
    information: LinkPreviewGithubMarkdownAllOfInformation;
    /**
     * 
     * @type {number}
     * @memberof LinkPreviewGithubMarkdown
     */
    http_error_code: number;
}

/**
 * Check if a given object implements the LinkPreviewGithubMarkdown interface.
 */
export function instanceOfLinkPreviewGithubMarkdown(value: object): value is LinkPreviewGithubMarkdown {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('information' in value) || value['information'] === undefined) return false;
    if (!('http_error_code' in value) || value['http_error_code'] === undefined) return false;
    return true;
}

export function LinkPreviewGithubMarkdownFromJSON(json: any): LinkPreviewGithubMarkdown {
    return LinkPreviewGithubMarkdownFromJSONTyped(json, false);
}

export function LinkPreviewGithubMarkdownFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkPreviewGithubMarkdown {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'type': json['type'],
        'information': LinkPreviewGithubMarkdownAllOfInformationFromJSON(json['information']),
        'http_error_code': json['http_error_code'],
    };
}

export function LinkPreviewGithubMarkdownToJSON(value?: LinkPreviewGithubMarkdown | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'url': value['url'],
        'type': value['type'],
        'information': LinkPreviewGithubMarkdownAllOfInformationToJSON(value['information']),
        'http_error_code': value['http_error_code'],
    };
}

