// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/python-3
{
	"name": "Chromium Dashboard",
	"build": {
		"dockerfile": "Dockerfile"
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"mypy-type-checker.args": ["--ignore-missing-imports --exclude cs-env/ --exclude gen/ --exclude appengine_config.py --disable-error-code \"annotation-unchecked\""],
				"python.defaultInterpreterPath": "/workspaces/chromium-dashboard/cs-env/bin/python",
				"python.languageServer": "Jedi",
				"python.testing.pytestEnabled": false,
				"python.testing.unittestArgs": [
					"-v",
					"-s",
					".",
					"-p",
					"*_test.py"
				],
				"python.testing.unittestEnabled": true,
				"[css]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[html]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[javascript]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[json]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[python]": {
					"editor.defaultFormatter": "charliermarsh.ruff"
				},
				"[scss]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				},
				"[yaml]": {
					"editor.defaultFormatter": "esbenp.prettier-vscode"
				}
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"42Crunch.vscode-openapi",
				"bierner.lit-html",
				"ms-playwright.playwright",
				"charliermarsh.ruff",
				"esbenp.prettier-vscode",
				"ms-python.mypy-type-checker",
				"ms-python.python",
				"EditorConfig.EditorConfig",
				"Google.gemini-cli-vscode-ide-companion"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		// datastore emulator viewer
		8888
	],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install -g gulp-cli && npm run clean-setup",
	// 'postStartCommand' runs each time the devcontainer is started.
	"postStartCommand": "docker-compose -f .devcontainer/db-docker-compose.yml down && docker-compose -f .devcontainer/db-docker-compose.yml up -d && npm run setup && npx playwright install --with-deps",
	// Use 'postAttachCommand' to run commands after the container is created and attached.
	"postAttachCommand": "./.devcontainer/post_attach.sh",
	"features": {
		// https://github.com/devcontainers/features/tree/main/src/docker-in-docker
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/devcontainers/features/java:1": {
			// Only pick LTS versions from
			// https://www.oracle.com/java/technologies/java-se-support-roadmap.html
			// Match the version on Cloudtops
			"version": "25"
		},
		"ghcr.io/devcontainers/features/node:1": {
			// Match the version on Cloudtops
			"version": "20"
		},
		"ghcr.io/devcontainers/features/python:1": {
			// Match the version on Cloudtops
			"version": "3.13"
		}
	},
	"remoteEnv": {
		"GEMINI_API_KEY": "${localEnv:GEMINI_API_KEY}"
	}
}
